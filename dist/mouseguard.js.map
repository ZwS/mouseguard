{
  "version": 3,
  "sources": ["../module/constants.js", "../module/helper.js", "../module/actor.js", "../module/item.js", "../module/item-sheet.js", "../node_modules/svelte/internal/index.mjs", "../node_modules/svelte/transition/index.mjs", "../node_modules/svelte/store/index.mjs", "../module/svelte/module/svelte/MouseGuardActorSheetMouseRewards.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseDetails.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMousePortrait.svelte", "../module/svelte/module/svelte/MouseGuardCommon.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseAbilities.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseSkills.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseWises.svelte", "../module/svelte/module/svelte/Tabs.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetBase.svelte", "../module/actor-sheet.js", "../module/templates.js", "../module/macro.js", "../module/mousedie.js", "../module/conflict-tracker.js", "../module/mouse-combantant.js", "../module/mouse-combat.js", "../module/mouse-combat-tracker.js", "../module/mouseguard.js"],
  "sourcesContent": ["export const ATTRIBUTE_TYPES = [\"String\", \"Number\", \"Boolean\", \"Formula\", \"Resource\"];", "import { ATTRIBUTE_TYPES } from \"./constants.js\";\n\nexport class EntitySheetHelper {\n\n  static getAttributeData(data) {\n\n    // Determine attribute type.\n    for ( let attr of Object.values(data.data.attributes) ) {\n      if ( attr.dtype ) {\n        attr.isCheckbox = attr.dtype === \"Boolean\";\n        attr.isResource = attr.dtype === \"Resource\";\n        attr.isFormula = attr.dtype === \"Formula\";\n      }\n    }\n\n    // Initialize ungrouped attributes for later.\n    data.data.ungroupedAttributes = {};\n\n    // Build an array of sorted group keys.\n    const groups = data.data.groups || {};\n    let groupKeys = Object.keys(groups).sort((a, b) => {\n      let aSort = groups[a].label ?? a;\n      let bSort = groups[b].label ?? b;\n      return aSort.localeCompare(bSort);\n    });\n\n    // Iterate over the sorted groups to add their attributes.\n    for ( let key of groupKeys ) {\n      let group = data.data.attributes[key] || {};\n\n      // Initialize the attributes container for this group.\n      if ( !data.data.groups[key]['attributes'] ) data.data.groups[key]['attributes'] = {};\n\n      // Sort the attributes within the group, and then iterate over them.\n      Object.keys(group).sort((a, b) => a.localeCompare(b)).forEach(attr => {\n        // Avoid errors if this is an invalid group.\n        if ( typeof group[attr] != \"object\" || !group[attr]) return;\n        // For each attribute, determine whether it's a checkbox or resource, and then add it to the group's attributes list.\n        group[attr]['isCheckbox'] = group[attr]['dtype'] === 'Boolean';\n        group[attr]['isResource'] = group[attr]['dtype'] === 'Resource';\n        group[attr]['isFormula'] = group[attr]['dtype'] === 'Formula';\n        data.data.groups[key]['attributes'][attr] = group[attr];\n      });\n    }\n\n    // Sort the remaining attributes attributes.\n    Object.keys(data.data.attributes).filter(a => !groupKeys.includes(a)).sort((a, b) => a.localeCompare(b)).forEach(key => {\n      data.data.ungroupedAttributes[key] = data.data.attributes[key];\n    });\n\n    // Modify attributes on items.\n    if ( data.items ) {\n      data.items.forEach(item => {\n        // Iterate over attributes.\n        for ( let [k, v] of Object.entries(item.data.attributes) ) {\n          // Grouped attributes.\n          if ( !v.dtype ) {\n            for ( let [gk, gv] of Object.entries(v) ) {\n              if ( gv.dtype ) {\n                // Add label fallback.\n                if ( !gv.label ) gv.label = gk;\n                // Add formula bool.\n                if ( gv.dtype === \"Formula\" ) {\n                  gv.isFormula = true;\n                }\n                else {\n                  gv.isFormula = false;\n                }\n              }\n            }\n          }\n          // Ungrouped attributes.\n          else {\n            // Add label fallback.\n            if ( !v.label ) v.label = k;\n            // Add formula bool.\n            if ( v.dtype === \"Formula\" ) {\n              v.isFormula = true;\n            }\n            else {\n              v.isFormula = false;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static onSubmit(event) {\n    // Closing the form/sheet will also trigger a submit, so only evaluate if this is an event.\n    if ( event.currentTarget ) {\n      // Exit early if this isn't a named attribute.\n      if ( (event.currentTarget.tagName.toLowerCase() === 'input') && !event.currentTarget.hasAttribute('name')) {\n        return false;\n      }\n\n      let attr = false;\n      // If this is the attribute key, we need to make a note of it so that we can restore focus when its recreated.\n      const el = event.currentTarget;\n      if ( el.classList.contains(\"attribute-key\") ) {\n        let val = el.value;\n        let oldVal = el.closest(\".attribute\").dataset.attribute;\n        let attrError = false;\n        // Prevent attributes that already exist as groups.\n        let groups = document.querySelectorAll('.group-key');\n        for ( let i = 0; i < groups.length; i++ ) {\n          if (groups[i].value === val) {\n            ui.notifications.error(game.i18n.localize(\"MOUSEGUARD.NotifyAttrDuplicate\") + ` (${val})`);\n            el.value = oldVal;\n            attrError = true;\n            break;\n          }\n        }\n        // Handle value and name replacement otherwise.\n        if ( !attrError ) {\n          oldVal = oldVal.includes('.') ? oldVal.split('.')[1] : oldVal;\n          attr = $(el).attr('name').replace(oldVal, val);\n        }\n      }\n\n      // Return the attribute key if set, or true to confirm the submission should be triggered.\n      return attr ? attr : true;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Listen for click events on an attribute control to modify the composition of attributes in the sheet\n   * @param {MouseEvent} event    The originating left click event\n   */\n  static async onClickAttributeControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const action = a.dataset.action;\n    switch ( action ) {\n      case \"create\":\n        return EntitySheetHelper.createAttribute(event, this);\n      case \"delete\":\n        return EntitySheetHelper.deleteAttribute(event, this);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Listen for click events and modify attribute groups.\n   * @param {MouseEvent} event    The originating left click event\n   */\n  static async onClickAttributeGroupControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const action = a.dataset.action;\n    switch ( action ) {\n      case \"create-group\":\n        return EntitySheetHelper.createAttributeGroup(event, this);\n      case \"delete-group\":\n        return EntitySheetHelper.deleteAttributeGroup(event, this);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Listen for the roll button on attributes.\n   * @param {MouseEvent} event    The originating left click event\n   */\n  static onAttributeRoll(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const label = button.closest(\".attribute\").querySelector(\".attribute-label\")?.value;\n    const chatLabel = label ?? button.parentElement.querySelector(\".attribute-key\").value;\n    const shorthand = game.settings.get(\"mouseguard\", \"macroShorthand\");\n\n    // Use the actor for rollData so that formulas are always in reference to the parent actor.\n    const rollData = this.actor.getRollData();\n    let formula = button.closest(\".attribute\").querySelector(\".attribute-value\")?.value;\n\n    // If there's a formula, attempt to roll it.\n    if ( formula ) {\n      let replacement = null;\n      if ( formula.includes('@item.') && this.item ) {\n        let itemName = this.item.name.slugify({strict: true}); // Get the machine safe version of the item name.\n        replacement = !!shorthand ? `@items.${itemName}.` : `@items.${itemName}.attributes.`;\n        formula = formula.replace('@item.', replacement);\n      }\n\n      // Create the roll and the corresponding message\n      let r = new Roll(formula, rollData);\n      return r.toMessage({\n        user: game.user.id,\n        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n        flavor: `${chatLabel}`\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return HTML for a new attribute to be applied to the form for submission.\n   *\n   * @param {Object} items  Keyed object where each item has a \"type\" and \"value\" property.\n   * @param {string} index  Numeric index or key of the new attribute.\n   * @param {string|boolean} group String key of the group, or false.\n   *\n   * @returns {string} Html string.\n   */\n  static getAttributeHtml(items, index, group = false) {\n    // Initialize the HTML.\n    let result = '<div style=\"display: none;\">';\n    // Iterate over the supplied keys and build their inputs (including whether or not they need a group key).\n    for (let [key, item] of Object.entries(items)) {\n      result = result + `<input type=\"${item.type}\" name=\"data.attributes${group ? '.' + group : '' }.attr${index}.${key}\" value=\"${item.value}\"/>`;\n    }\n    // Close the HTML and return.\n    return result + '</div>';\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Validate whether or not a group name can be used.\n   * @param {string} groupName    The candidate group name to validate\n   * @param {Document} document   The Actor or Item instance within which the group is being defined\n   * @returns {boolean}\n   */\n  static validateGroup(groupName, document) {\n    let groups = Object.keys(document.data.data.groups || {});\n    let attributes = Object.keys(document.data.data.attributes).filter(a => !groups.includes(a));\n\n    // Check for duplicate group keys.\n    if ( groups.includes(groupName) ) {\n      ui.notifications.error(game.i18n.localize(\"MOUSEGUARD.NotifyGroupDuplicate\") + ` (${groupName})`);\n      return false;\n    }\n\n    // Check for group keys that match attribute keys.\n    if ( attributes.includes(groupName) ) {\n      ui.notifications.error(game.i18n.localize(\"MOUSEGUARD.NotifyGroupAttrDuplicate\") + ` (${groupName})`);\n      return false;\n    }\n\n    // Check for whitespace or periods.\n    if ( groupName.match(/[\\s|\\.]/i) ) {\n      ui.notifications.error(game.i18n.localize(\"MOUSEGUARD.NotifyGroupAlphanumeric\"));\n      return false;\n    }\n    return true;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Create new attributes.\n   * @param {MouseEvent} event    The originating left click event\n   * @param {Object} app          The form application object.\n   * @private\n   */\n  static async createAttribute(event, app) {\n    const a = event.currentTarget;\n    const group = a.dataset.group;\n    let dtype = a.dataset.dtype;\n    const attrs = app.object.data.data.attributes;\n    const groups = app.object.data.data.groups;\n    const form = app.form;\n\n    // Determine the new attribute key for ungrouped attributes.\n    let objKeys = Object.keys(attrs).filter(k => !Object.keys(groups).includes(k));\n    let nk = Object.keys(attrs).length + 1;\n    let newValue = `attr${nk}`;\n    let newKey = document.createElement(\"div\");\n    while ( objKeys.includes(newValue) ) {\n      ++nk;\n      newValue = `attr${nk}`;\n    }\n\n    // Build options for construction HTML inputs.\n    let htmlItems = {\n      key: {\n        type: \"text\",\n        value: newValue\n      }\n    };\n\n    // Grouped attributes.\n    if ( group ) {\n      objKeys = attrs[group] ? Object.keys(attrs[group]) : [];\n      nk = objKeys.length + 1;\n      newValue = `attr${nk}`;\n      while ( objKeys.includes(newValue) ) {\n        ++nk;\n        newValue =  `attr${nk}`;\n      }\n\n      // Update the HTML options used to build the new input.\n      htmlItems.key.value = newValue;\n      htmlItems.group = {\n        type: \"hidden\",\n        value: group\n      };\n      htmlItems.dtype = {\n        type: \"hidden\",\n        value: dtype\n      };\n    }\n    // Ungrouped attributes.\n    else {\n      // Choose a default dtype based on the last attribute, fall back to \"String\".\n      if (!dtype) {\n        let lastAttr = document.querySelector('.attributes > .attributes-group .attribute:last-child .attribute-dtype')?.value;\n        dtype = lastAttr ? lastAttr : \"String\";\n        htmlItems.dtype = {\n          type: \"hidden\",\n          value: dtype\n        };\n      }\n    }\n\n    // Build the form elements used to create the new grouped attribute.\n    newKey.innerHTML = EntitySheetHelper.getAttributeHtml(htmlItems, nk, group);\n\n    // Append the form element and submit the form.\n    newKey = newKey.children[0];\n    form.appendChild(newKey);\n    await app._onSubmit(event);\n  }\n\n  /**\n   * Delete an attribute.\n   * @param {MouseEvent} event    The originating left click event\n   * @param {Object} app          The form application object.\n   * @private\n   */\n  static async deleteAttribute(event, app) {\n    const a = event.currentTarget;\n    const li = a.closest(\".attribute\");\n    if ( li ) {\n      li.parentElement.removeChild(li);\n      await app._onSubmit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Create new attribute groups.\n   * @param {MouseEvent} event    The originating left click event\n   * @param {Object} app          The form application object.\n   * @private\n   */\n  static async createAttributeGroup(event, app) {\n    const a = event.currentTarget;\n    const form = app.form;\n    let newValue = $(a).siblings('.group-prefix').val();\n    // Verify the new group key is valid, and use it to create the group.\n    if ( newValue.length > 0 && EntitySheetHelper.validateGroup(newValue, app.object) ) {\n      let newKey = document.createElement(\"div\");\n      newKey.innerHTML = `<input type=\"text\" name=\"data.groups.${newValue}.key\" value=\"${newValue}\"/>`;\n      // Append the form element and submit the form.\n      newKey = newKey.children[0];\n      form.appendChild(newKey);\n      await app._onSubmit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Delete an attribute group.\n   * @param {MouseEvent} event    The originating left click event\n   * @param {Object} app          The form application object.\n   * @private\n   */\n  static async deleteAttributeGroup(event, app) {\n    const a = event.currentTarget;\n    let groupHeader = a.closest(\".group-header\");\n    let groupContainer = groupHeader.closest(\".group\");\n    let group = $(groupHeader).find('.group-key');\n    // Create a dialog to confirm group deletion.\n    new Dialog({\n      title: game.i18n.localize(\"MOUSEGUARD.DeleteGroup\"),\n      content: `${game.i18n.localize(\"MOUSEGUARD.DeleteGroupContent\")} <strong>${group.val()}</strong>`,\n      buttons: {\n        confirm: {\n          icon: '<i class=\"fas fa-trash\"></i>',\n          label: game.i18n.localize(\"Yes\"),\n          callback: async () => {\n            groupContainer.parentElement.removeChild(groupContainer);\n            await app._onSubmit(event);\n          }\n        },\n        cancel: {\n          icon: '<i class=\"fas fa-times\"></i>',\n          label: game.i18n.localize(\"No\"),\n        }\n      }\n    }).render(true);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update attributes when updating an actor object.\n   * @param {object} formData       The form data object to modify keys and values for.\n   * @param {Document} document     The Actor or Item document within which attributes are being updated\n   * @returns {object}              The updated formData object.\n   */\n  static updateAttributes(formData, document) {\n    let groupKeys = [];\n\n    // Handle the free-form attributes list\n    const formAttrs = foundry.utils.expandObject(formData)?.data?.attributes || {};\n    const attributes = Object.values(formAttrs).reduce((obj, v) => {\n      let attrs = [];\n      let group = null;\n      // Handle attribute keys for grouped attributes.\n      if ( !v[\"key\"] ) {\n        attrs = Object.keys(v);\n        attrs.forEach(attrKey => {\n          group = v[attrKey]['group'];\n          groupKeys.push(group);\n          let attr = v[attrKey];\n          let k = v[attrKey][\"key\"] ? v[attrKey][\"key\"].trim() : attrKey.trim();\n          if ( /[\\s\\.]/.test(k) )  return ui.notifications.error(\"Attribute keys may not contain spaces or periods\");\n          delete attr[\"key\"];\n          // Add the new attribute if it's grouped, but we need to build the nested structure first.\n          if ( !obj[group] ) {\n            obj[group] = {};\n          }\n          obj[group][k] = attr;\n        });\n      }\n      // Handle attribute keys for ungrouped attributes.\n      else {\n        let k = v[\"key\"].trim();\n        if ( /[\\s\\.]/.test(k) )  return ui.notifications.error(\"Attribute keys may not contain spaces or periods\");\n        delete v[\"key\"];\n        // Add the new attribute only if it's ungrouped.\n        if ( !group ) {\n          obj[k] = v;\n        }\n      }\n      return obj;\n    }, {});\n\n    // Remove attributes which are no longer used\n    for ( let k of Object.keys(document.data.data.attributes) ) {\n      if ( !attributes.hasOwnProperty(k) ) attributes[`-=${k}`] = null;\n    }\n\n    // Remove grouped attributes which are no longer used.\n    for ( let group of groupKeys) {\n      if ( document.data.data.attributes[group] ) {\n        for ( let k of Object.keys(document.data.data.attributes[group]) ) {\n          if ( !attributes[group].hasOwnProperty(k) ) attributes[group][`-=${k}`] = null;\n        }\n      }\n    }\n\n    // Re-combine formData\n    formData = Object.entries(formData).filter(e => !e[0].startsWith(\"data.attributes\")).reduce((obj, e) => {\n      obj[e[0]] = e[1];\n      return obj;\n    }, {_id: document.id, \"data.attributes\": attributes});\n\n    return formData;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update attribute groups when updating an actor object.\n   * @param {object} formData       The form data object to modify keys and values for.\n   * @param {Document} document     The Actor or Item document within which attributes are being updated\n   * @returns {object}              The updated formData object.\n   */\n  static updateGroups(formData, document) {\n    // Handle the free-form groups list\n    const formGroups = expandObject(formData).data.groups || {};\n    const groups = Object.values(formGroups).reduce((obj, v) => {\n      // If there are duplicate groups, collapse them.\n      if ( Array.isArray(v[\"key\"]) ) {\n        v[\"key\"] = v[\"key\"][0];\n      }\n      // Trim and clean up.\n      let k = v[\"key\"].trim();\n      if ( /[\\s\\.]/.test(k) )  return ui.notifications.error(\"Group keys may not contain spaces or periods\");\n      delete v[\"key\"];\n      obj[k] = v;\n      return obj;\n    }, {});\n\n    // Remove groups which are no longer used\n    for ( let k of Object.keys(document.data.data.groups) ) {\n      if ( !groups.hasOwnProperty(k) ) groups[`-=${k}`] = null;\n    }\n\n    // Re-combine formData\n    formData = Object.entries(formData).filter(e => !e[0].startsWith(\"data.groups\")).reduce((obj, e) => {\n      obj[e[0]] = e[1];\n      return obj;\n    }, {_id: document.id, \"data.groups\": groups});\n    return formData;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @see ClientDocumentMixin.createDialog\n   */\n  static async createDialog(data={}, options={}) {\n\n    // Collect data\n    const documentName = this.metadata.name;\n    const folders = game.folders.filter(f => (f.data.type === documentName) && f.displayed);\n    const label = game.i18n.localize(this.metadata.label);\n    const title = game.i18n.format(\"ENTITY.Create\", {entity: label});\n\n    // Identify the template Actor types\n    const collection = game.collections.get(this.documentName);\n    const templates = collection.filter(a => a.getFlag(\"mouseguard\", \"isTemplate\"));\n    const defaultType = this.metadata.types[0];\n    const types = {\n      [defaultType]: game.i18n.localize(\"MOUSEGUARD.NoTemplate\")\n    }\n    for ( let a of templates ) {\n      types[a.id] = a.name;\n    }\n\n    // Render the entity creation form\n    const html = await renderTemplate(`templates/sidebar/entity-create.html`, {\n      name: data.name || game.i18n.format(\"ENTITY.New\", {entity: label}),\n      folder: data.folder,\n      folders: folders,\n      hasFolders: folders.length > 1,\n      type: data.type || templates[0]?.id || \"\",\n      types: types,\n      hasTypes: true\n    });\n\n    // Render the confirmation dialog window\n    return Dialog.prompt({\n      title: title,\n      content: html,\n      label: title,\n      callback: html => {\n\n        // Get the form data\n        const form = html[0].querySelector(\"form\");\n        const fd = new FormDataExtended(form);\n        let createData = fd.toObject();\n\n        // Merge with template data\n        const template = collection.get(form.type.value);\n        if ( template ) {\n          createData = foundry.utils.mergeObject(template.toObject(), createData);\n          createData.type = template.data.type;\n          delete createData.flags.mouseguard.isTemplate;\n        }\n\n        // Merge provided override data\n        createData = foundry.utils.mergeObject(createData, data);\n        return this.create(createData, {renderSheet: true});\n      },\n      rejectClose: false,\n      options: options\n    });\n  }\n}", "import { EntitySheetHelper } from \"./helper.js\";\n\n/**\n * Extend the base Actor document to support attributes and groups with a custom template creation dialog.\n * @extends {Actor}\n */\nexport class MouseGuardActor extends Actor {\n\n  /** @inheritdoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    this.data.data.groups = this.data.data.groups || {};\n    this.data.data.attributes = this.data.data.attributes || {};\n\n  }\n\n  prepareData() {\n    super.prepareData();\n    const actorData = this.data;\n    //console.log(actorData)\n    if (this.type === 'character') this._prepareCharacterData(this.data);\n  }\n\n\n  _prepareCharacterData(actorData) {\n    actorData.data.itemTypes = this.itemTypes;\n    //mergeObject(actorData.data, this.itemTypes)\n  }\n\n\n  async _preCreate(data, options, user) {\n    await super._preCreate(data, options, user);\n    //this.data.update({name: \"Some other name\"});\n    //Create Abilities using localization\n    \n    const abilities = []\n    if (data.type === 'character' && this.itemTypes.ability.length <= 0) {\n      //Setup Abilities\n      const create_ability = [\"MOUSEGUARD.MNature\",\"MOUSEGUARD.Will\",\"MOUSEGUARD.Health\",\"MOUSEGUARD.Resources\",\"MOUSEGUARD.Circles\"]\n      for (let i of create_ability) {\n        abilities.push({\n          name: i,\n          type: 'ability',\n        });\n      }\n      this.data.update({ items: abilities });\n    }\n    \n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  //static async createDialog(data={}, options={}) {\n  //  return EntitySheetHelper.createDialog.call(this, data, options);\n  // }\n\n  /* -------------------------------------------- */\n  /*  Roll Data Preparation                       */\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  getRollData() {\n\n    // Copy the actor's system data\n    const data = this.toObject(false).data;\n    const shorthand = game.settings.get(\"mouseguard\", \"macroShorthand\");\n    const formulaAttributes = [];\n    const itemAttributes = [];\n\n    // Handle formula attributes when the short syntax is disabled.\n    this._applyShorthand(data, formulaAttributes, shorthand);\n\n    // Map all items data using their slugified names\n    this._applyItems(data, itemAttributes, shorthand);\n\n    // Evaluate formula replacements on items.\n    this._applyItemsFormulaReplacements(data, itemAttributes, shorthand);\n\n    // Evaluate formula attributes after all other attributes have been handled, including items.\n    this._applyFormulaReplacements(data, formulaAttributes, shorthand);\n\n    // Remove the attributes if necessary.\n    if ( !!shorthand ) {\n      delete data.attributes;\n      delete data.attr;\n      delete data.abil;\n      delete data.groups;\n    }\n    return data;\n  }\n\n\n  /* -------------------------------------------- */\n\n  /**\n   * Apply shorthand syntax to actor roll data.\n   * @param {Object} data The actor's data object.\n   * @param {Array} formulaAttributes Array of attributes that are derived formulas.\n   * @param {Boolean} shorthand Whether or not the shorthand syntax is used.\n   */\n  _applyShorthand(data, formulaAttributes, shorthand) {\n    // Handle formula attributes when the short syntax is disabled.\n    for ( let [k, v] of Object.entries(data.attributes || {}) ) {\n      // Make an array of formula attributes for later reference.\n      if ( v.dtype === \"Formula\" ) formulaAttributes.push(k);\n      // Add shortened version of the attributes.\n      if ( !!shorthand ) {\n        if ( !(k in data) ) {\n          // Non-grouped attributes.\n          if ( v.dtype ) {\n            data[k] = v.value;\n          }\n          // Grouped attributes.\n          else {\n            data[k] = {};\n            for ( let [gk, gv] of Object.entries(v) ) {\n              data[k][gk] = gv.value;\n              if ( gv.dtype === \"Formula\" ) formulaAttributes.push(`${k}.${gk}`);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add items to the actor roll data object. Handles regular and shorthand\n   * syntax, and calculates derived formula attributes on the items.\n   * @param {Object} data The actor's data object.\n   * @param {string[]} itemAttributes\n   * @param {Boolean} shorthand Whether or not the shorthand syntax is used.\n   */\n  _applyItems(data, itemAttributes, shorthand) {\n    // Map all items data using their slugified names\n    data.items = this.items.reduce((obj, item) => {\n      const key = item.name.slugify({strict: true});\n      const itemData = item.toObject(false).data;\n\n      // Add items to shorthand and note which ones are formula attributes.\n      for ( let [k, v] of Object.entries(itemData.attributes) ) {\n        // When building the attribute list, prepend the item name for later use.\n        if ( v.dtype === \"Formula\" ) itemAttributes.push(`${key}..${k}`);\n        // Add shortened version of the attributes.\n        if ( !!shorthand ) {\n          if ( !(k in itemData) ) {\n            // Non-grouped item attributes.\n            if ( v.dtype ) {\n              itemData[k] = v.value;\n            }\n            // Grouped item attributes.\n            else {\n              if ( !itemData[k] ) itemData[k] = {};\n              for ( let [gk, gv] of Object.entries(v) ) {\n                itemData[k][gk] = gv.value;\n                if ( gv.dtype === \"Formula\" ) itemAttributes.push(`${key}..${k}.${gk}`);\n              }\n            }\n          }\n        }\n        // Handle non-shorthand version of grouped attributes.\n        else {\n          if ( !v.dtype ) {\n            if ( !itemData[k] ) itemData[k] = {};\n            for ( let [gk, gv] of Object.entries(v) ) {\n              itemData[k][gk] = gv.value;\n              if ( gv.dtype === \"Formula\" ) itemAttributes.push(`${key}..${k}.${gk}`);\n            }\n          }\n        }\n      }\n\n      // Delete the original attributes key if using the shorthand syntax.\n      if ( !!shorthand ) {\n        delete itemData.attributes;\n      }\n      obj[key] = itemData;\n      return obj;\n    }, {});\n  }\n\n  /* -------------------------------------------- */\n\n  _applyItemsFormulaReplacements(data, itemAttributes, shorthand) {\n    for ( let k of itemAttributes ) {\n      // Get the item name and separate the key.\n      let item = null;\n      let itemKey = k.split('..');\n      item = itemKey[0];\n      k = itemKey[1];\n\n      // Handle group keys.\n      let gk = null;\n      if ( k.includes('.') ) {\n        let attrKey = k.split('.');\n        k = attrKey[0];\n        gk = attrKey[1];\n      }\n\n      let formula = '';\n      if ( !!shorthand ) {\n        // Handle grouped attributes first.\n        if ( data.items[item][k][gk] ) {\n          formula = data.items[item][k][gk].replace('@item.', `@items.${item}.`);\n          data.items[item][k][gk] = Roll.replaceFormulaData(formula, data);\n        }\n        // Handle non-grouped attributes.\n        else if ( data.items[item][k] ) {\n          formula = data.items[item][k].replace('@item.', `@items.${item}.`);\n          data.items[item][k] = Roll.replaceFormulaData(formula, data);\n        }\n      }\n      else {\n        // Handle grouped attributes first.\n        if ( data.items[item]['attributes'][k][gk] ) {\n          formula = data.items[item]['attributes'][k][gk]['value'].replace('@item.', `@items.${item}.attributes.`);\n          data.items[item]['attributes'][k][gk]['value'] = Roll.replaceFormulaData(formula, data);\n        }\n        // Handle non-grouped attributes.\n        else if ( data.items[item]['attributes'][k]['value'] ) {\n          formula = data.items[item]['attributes'][k]['value'].replace('@item.', `@items.${item}.attributes.`);\n          data.items[item]['attributes'][k]['value'] = Roll.replaceFormulaData(formula, data);\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Apply replacements for derived formula attributes.\n   * @param {Object} data The actor's data object.\n   * @param {Array} formulaAttributes Array of attributes that are derived formulas.\n   * @param {Boolean} shorthand Whether or not the shorthand syntax is used.\n   */\n  _applyFormulaReplacements(data, formulaAttributes, shorthand) {\n    // Evaluate formula attributes after all other attributes have been handled, including items.\n    for ( let k of formulaAttributes ) {\n      // Grouped attributes are included as `group.attr`, so we need to split them into new keys.\n      let attr = null;\n      if ( k.includes('.') ) {\n        let attrKey = k.split('.');\n        k = attrKey[0];\n        attr = attrKey[1];\n      }\n      // Non-grouped attributes.\n      if ( data.attributes[k]?.value ) {\n        data.attributes[k].value = Roll.replaceFormulaData(data.attributes[k].value, data);\n      }\n      // Grouped attributes.\n      else if ( attr ) {\n        data.attributes[k][attr].value = Roll.replaceFormulaData(data.attributes[k][attr].value, data);\n      }\n\n      // Duplicate values to shorthand.\n      if ( !!shorthand ) {\n        // Non-grouped attributes.\n        if ( data.attributes[k]?.value ) {\n          data[k] = data.attributes[k].value;\n        }\n        // Grouped attributes.\n        else {\n          if ( attr ) {\n            // Initialize a group key in case it doesn't exist.\n            if ( !data[k] ) {\n              data[k] = {};\n            }\n            data[k][attr] = data.attributes[k][attr].value;\n          }\n        }\n      }\n    }\n  }\n}\n", "import {EntitySheetHelper} from \"./helper.js\";\n\n/**\n * Extend the base Item document to support attributes and groups with a custom template creation dialog.\n * @extends {Item}\n */\nexport class MouseGuardItem extends Item {\n\n  /** @inheritdoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    this.data.data.groups = this.data.data.groups || {};\n    this.data.data.attributes = this.data.data.attributes || {};\n  }\n\n  /* -------------------------------------------- */\n\n}\n", "import { EntitySheetHelper } from \"./helper.js\";\nimport {ATTRIBUTE_TYPES} from \"./constants.js\";\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n * @extends {ItemSheet}\n */\nexport class MouseGuardItemSheet extends ItemSheet {\n\n  /** @inheritdoc */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"mouseguard\", \"sheet\", \"item\"],\n      template: \"systems/mouseguard/templates/item-sheet.html\",\n      width: 520,\n      height: 480,\n      tabs: [{navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\"}],\n      scrollY: [\".attributes\"],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  getData() {\n    const context = super.getData();\n    EntitySheetHelper.getAttributeData(context.data);\n    context.systemData = context.data.data;\n    context.dtypes = ATTRIBUTE_TYPES;\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n\tactivateListeners(html) {\n    super.activateListeners(html);\n\n    // Everything below here is only needed if the sheet is editable\n    if ( !this.isEditable ) return;\n\n    // Attribute Management\n    html.find(\".attributes\").on(\"click\", \".attribute-control\", EntitySheetHelper.onClickAttributeControl.bind(this));\n    html.find(\".groups\").on(\"click\", \".group-control\", EntitySheetHelper.onClickAttributeGroupControl.bind(this));\n    html.find(\".attributes\").on(\"click\", \"a.attribute-roll\", EntitySheetHelper.onAttributeRoll.bind(this));\n\n    // Add draggable for Macro creation\n    html.find(\".attributes a.attribute-roll\").each((i, a) => {\n      a.setAttribute(\"draggable\", true);\n      a.addEventListener(\"dragstart\", ev => {\n        let dragData = ev.currentTarget.dataset;\n        ev.dataTransfer.setData('text/plain', JSON.stringify(dragData));\n      }, false);\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  _getSubmitData(updateData) {\n    let formData = super._getSubmitData(updateData);\n    formData = EntitySheetHelper.updateAttributes(formData, this.object);\n    formData = EntitySheetHelper.updateGroups(formData, this.object);\n    return formData;\n  }\n}\n", "function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro \u2014 we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro \u2014 needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n", "import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n", "import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\t$: data = $sheetData.data;\r\n\r\n</script>\r\n\r\n<largecard>\r\n\t<h1>Rewards</h1>\r\n\t<left class=\"left\">\r\n\t\t<fatebox>\r\n\t\t\t<label class=\"header\">{game.i18n.localize(\"MOUSEGUARD.Fate\")}</label>\r\n\t\t\t<input name=\"data.rewards.fate\" type=\"number\" value=\"{data.data.rewards.fate}\" placeholder=\"0\"/>\r\n\t\t</fatebox>\r\n\t\t<personabox>\r\n\t\t\t<label class=\"header\">{game.i18n.localize(\"MOUSEGUARD.Persona\")}</label>\r\n\t\t\t<input name=\"data.rewards.persona\" type=\"number\" value=\"{data.data.rewards.persona}\" placeholder=\"0\"/>\r\n\t\t</personabox>\r\n\t</left>\r\n\t<right class=\"right\">\r\n\t\t<rewardbox>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Belief\")}</label>\r\n\t\t\t<label class=\"sub\">{@html game.i18n.localize(\"MOUSEGUARD.BeliefSub\")}</label>\r\n\t\t\t<textarea name=\"data.rewards.belief\">{data.data.rewards.belief}</textarea>\r\n\t\t</rewardbox>\r\n\t\t<rewardbox>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Instinct\")}</label>\r\n\t\t\t<label class=\"sub\">{@html game.i18n.localize(\"MOUSEGUARD.InstinctSub\")}</label>\r\n\t\t\t<textarea name=\"data.rewards.instinct\">{data.data.rewards.instinct}</textarea>\r\n\t\t</rewardbox>\r\n\t\t<rewardbox>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Goal\")}</label>\r\n\t\t\t<label class=\"sub\">{@html game.i18n.localize(\"MOUSEGUARD.GoalSub\")}</label>\r\n\t\t\t<textarea name=\"data.rewards.goal\">{data.data.rewards.goal}</textarea>\r\n\r\n\t\t</rewardbox>\r\n\t</right>\r\n</largecard>\r\n\r\n\r\n<style>\r\n\tlargecard {\r\n\t\tmargin: 0 auto;\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.child {\r\n\t\twidth: 50%;\r\n\t\theight: 100%; /* Or whatever */\r\n  \t\tmargin: auto;  /* Magic! */\r\n\t}\r\n\r\n\tlineitem {\r\n\t\twidth: 210px;\r\n\t\tmargin: auto;  /* Magic! */\r\n\t\tdisplay:flex;\r\n\t\tfloat:left;\r\n\t\tpadding: 5px;\r\n\t\theight: 100%;\r\n\t}\r\n\tlabel {\r\n\t\tmargin-top: 3px;\r\n\t}\r\n\tinput {\r\n\t\tborder: none;\r\n\t}\r\n\r\n\th1 { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tpadding-left: 30px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.header { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size: large;\r\n\t\twidth: 100%;\r\n\t\ttext-align: center;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\tfatebox { \r\n\t\tposition: relative;\r\n\t\ttop:60;\r\n\t\tleft: 11px;\r\n\t\twidth: 85px;\r\n\t\theight: 110px;\r\n\t\tdisplay:block;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tbackground-image: url(\"../assets/actor/Fate.svg\");\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-position-y: 25px;\r\n\t}\r\n\r\n\tfatebox input {\r\n\t\twidth: 50px;\r\n\t\tposition: relative;\r\n\t\ttop: 30px;\r\n\t\tleft: 25px;\r\n\t\theight: 30px;\r\n\t\twidth: 35px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: large;\r\n\t\tbackground: rgba(0, 0, 0, 0);\r\n\r\n\t}\r\n\r\n\tpersonabox { \r\n\t\tposition: relative;\r\n\t\ttop:11px;\r\n\t\tleft: 11px;\r\n\t\twidth: 85px;\r\n\t\theight: 125px;\r\n\t\tdisplay:block;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tbackground-image: url(\"../assets/actor/Persona.svg\");\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-position-y: 24px;\r\n\t}\r\n\r\n\tpersonabox input {\r\n\t\twidth: 50px;\r\n\t\tposition: relative;\r\n\t\ttop: 22px;\r\n\t\tleft: 25px;\r\n\t\theight: 50px;\r\n\t\twidth: 35px;\r\n\t\ttext-align: center;\r\n\t\tfont-size: large;\r\n\t\tbackground: rgba(0, 0, 0, 0);\r\n\t}\r\n\r\n\trewardbox { \r\n\t\tposition: relative;\r\n\t\tleft: 10px;\r\n\t\twidth: 95%;\r\n\t\tmargin-bottom: 10px;\r\n\t\tdisplay:block;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size: large;\r\n\t}\r\n\r\n\tlabel {\r\n\t\twidth: 100%;\r\n\t\tdisplay:block;\r\n\t}\r\n\t.sub {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\r\n\r\n\t}\r\n\r\n\ttextarea {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\tbackground: rgba(0, 0, 0, 0.05);\r\n\r\n\t}\r\n\r\n\t.left {\r\n\t\twidth: 100px;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t.right { \r\n\t\twidth: 85%;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\r\n\r\n</style>", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\r\n\timport MouseGuardActorSheetMouseRewards from \"./MouseGuardActorSheetMouseRewards.svelte\"; \r\n\r\n\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\t$: data = $sheetData.data;\r\n\r\n\r\n\tconst filePicker = (event) => {\r\n    const attr = event.currentTarget.dataset.edit;\r\n    const current = getProperty(data, attr);\r\n    const fp = new FilePicker({\r\n\t\ttype: \"image\",\r\n\t\tcurrent: current,\r\n\t\tcallback: (path) => {\r\n        \tactor.update({ [attr]: path });\r\n\t\t},\r\n\t\ttop: sheet.position.top + 40,\r\n\t\tleft: sheet.position.left + 10,\r\n\t\t});\r\n    return fp.browse();\r\n\t};\r\n\r\n\r\n</script>\r\n<largecard>\r\n\t\t<div class=\"namebox\">\r\n\t\t\t<h1>Name </h1>\r\n\t\t\t<input name=\"name\" type=\"text\" value=\"{data.name}\" placeholder=\"Name\"/>\r\n\t\t</div>\r\n\t\t<ul>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Age\")}: </label>\r\n\t\t\t<input name=\"data.details.age\" type=\"number\" value=\"{data.data.details.age}\" placeholder=\"0\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Parents\")}: </label>\r\n\t\t\t<input name=\"data.details.parents\" type=\"text\" value=\"{data.data.details.parents}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Parents\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Home\")}: </label>\r\n\t\t\t<input name=\"data.details.home\" type=\"text\" value=\"{data.data.details.home}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Home\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Senior\")}: </label>\r\n\t\t\t<input name=\"data.details.senior_artisan\" type=\"text\" value=\"{data.data.details.senior_artisan}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Senior\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Fur\")}: </label>\r\n\t\t\t<input name=\"data.details.fur_color\" type=\"text\" value=\"{data.data.details.fur_color}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Fur\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Mentor\")}: </label>\r\n\t\t\t<input name=\"data.details.mentor\" type=\"text\" value=\"{data.data.details.mentor}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Mentor\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Cloak\")}: </label>\r\n\t\t\t<input name=\"data.details.cloak_color\" type=\"text\" value=\"{data.data.details.cloak_color}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Cloak\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Friend\")}: </label>\r\n\t\t\t<input name=\"data.details.friend\" type=\"text\" value=\"{data.data.details.friend}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Friend\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.GuardRank\")}: </label>\r\n\t\t\t<input name=\"data.details.guard_rank\" type=\"text\" value=\"{data.data.details.guard_rank}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.GuardRank\")}\"/>\r\n\t\t</lineitem>\r\n\t\t<lineitem>\r\n\t\t\t<label>{game.i18n.localize(\"MOUSEGUARD.Enemy\")}: </label>\r\n\t\t\t<input name=\"data.details.enemy\" type=\"text\" value=\"{data.data.details.enemy}\" placeholder=\"{game.i18n.localize(\"MOUSEGUARD.Enemy\")}\"/>\r\n\t\t</lineitem>\r\n\t\t</ul>\r\n</largecard>\r\n\r\n<MouseGuardActorSheetMouseRewards />\r\n\r\n<style>\r\n\tlargecard {\r\n\t\tmargin: 0 auto;\r\n\t\tdisplay: inline-block;\r\n\t\theight: 250px;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t}\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.child {\r\n\t\twidth: 50%;\r\n\t\theight: 100%; /* Or whatever */\r\n  \t\tmargin: auto;  /* Magic! */\r\n\t}\r\n\r\n\tlineitem {\r\n\t\tmargin: auto;  /* Magic! */\r\n\t\tdisplay:flex;\r\n\t\tfloat:left;\r\n\t\tpadding: 5px;\r\n\t\theight: 100%;\r\n\t}\r\n\tlabel {\r\n\t\twidth:180px;\r\n\t\ttext-align: right;\r\n\t\tmargin-top: 3px;\r\n\t\tpadding-right: 2px;\r\n\t\tfont-weight: bold;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t}\r\n\tinput {\r\n\t\tborder: none;\r\n\t}\r\n\t.namebox {\r\n\t\tposition: relative;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\theight: 60px;\r\n\t\tpointer-events: none; \r\n\t}\r\n\t.namebox input {\r\n\t\tbackground: rgba(0, 0, 0, 0);\r\n\t\tbackground-image: url(\"../assets/actor/NameBanner.svg\");\r\n\t\tbackground-repeat: no-repeat;\r\n\t\theight: 60px;\r\n\t\twidth: 300px;\r\n\t\tfont-size: 24px;\r\n\t\tpadding-left: 20px;\r\n\t\tpadding-bottom: 14px;\r\n\t\tposition: relative;\r\n\t\ttop: -40px;\r\n\t\tleft: 100px;\r\n\t\tpointer-events: auto; \r\n\t}\r\n\t\r\n\t.namebox h1 { \r\n\t\tpadding-left: 30px;\r\n\t}\r\n\t\r\n\tlineitem input {\r\n\t\tpadding-top:5px;\r\n\t\tpointer-events: auto; \r\n\t}\r\n</style>", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\t$: data = $sheetData.data;\r\n\r\n\r\n/**\r\n   * Opens a File Picker and updates the actor accordingly.\r\n   */\r\n\tconst filePicker = (event) => {\r\n    const attr = event.currentTarget.dataset.edit;\r\n    const current = getProperty(data, attr);\r\n    const fp = new FilePicker({\r\n\t\ttype: \"image\",\r\n\t\tcurrent: current,\r\n\t\tcallback: (path) => {\r\n        \tactor.update({ [attr]: path });\r\n\t\t},\r\n\t\ttop: sheet.position.top + 40,\r\n\t\tleft: sheet.position.left + 10,\r\n\t\t});\r\n    return fp.browse();\r\n\t};\r\n\r\n</script>\r\n\r\n\r\n\t<img on:click={filePicker} class=\"profile-img\" src=\"{data.img}\" data-edit=\"img\" title=\"{data.name}\" height=\"100\" width=\"100\"/>\r\n\r\n", "\r\n<script context=\"module\">\r\n\r\n\texport function updateRating(sheet,item, type, value){\r\n\t\t//sheet?._updateActorAbility(item, type, value);\r\n        //console.log (\"updateRating\")\r\n\r\n\t\tconst ob = {[type]:value};\r\n\t\tif (type == 'rank' || type ==\"rating\") {\r\n            if (value < 1 ) ob[type] = 1;\r\n            ob.fail = 0;\r\n\t\t\tob.pass = 0;\r\n\t\t}\r\n\t\tsheet?._updateEmbededItem(item, ob);\r\n\r\n\t}\r\n\r\n\texport function setMouseDice(sheet, count) {\r\n\t\tsheet?._setMouseDice(count);\r\n\t}\r\n\r\n</script>\r\n", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\timport { identity, validate_each_argument } from \"svelte/internal\";\r\n\timport { updateRating, setMouseDice} from \"./MouseGuardCommon.svelte\";\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\tlet abilities;\r\n\t$: data = $sheetData.data;\r\n\t$: abilities = $sheetData.data.data.itemTypes.ability;\r\n\r\n</script>\r\n\r\n<largecard>\r\n\t<h1>Abilities</h1>\r\n\t{#each abilities as ability}\r\n\t\t<ability>\r\n\t\t<div name=\"{ability.id}\">\r\n\t\t\t<label  on:click={e => setMouseDice(sheet, ability.data.data.rating) }  class=\"header\"><a>{game.i18n.localize( ability.name )}</a>: </label>\r\n\t\t\t<input name=\"{ability.id}\" type=\"number\" value=\"{ability.data.data.rating}\" on:change={e => updateRating(sheet,e.target.name, 'rating', parseInt(e.target.value)) }/>\r\n\t\t\t<pass>P:\r\n\t\t\t{#each {length: parseInt(ability.data.data.rating) +1} as _, i}\r\n\t\t\t\t{#if ability.data.data.pass > i}\r\n\t\t\t\t\t<div  on:click={e => updateRating(sheet, ability.id, 'pass', parseInt(ability.data.data.pass)-1 ) }  class=\"checkmark\"></div>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<div on:click={e => updateRating(sheet, ability.id, 'pass', parseInt(ability.data.data.pass)+1 ) }  class=\"no-checkmark\"></div>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t\t</pass>\r\n\t\t\t<fail>F:\r\n\t\t\t\t{#each {length: parseInt(ability.data.data.rating) } as _, i}\r\n\t\t\t\t\t{#if ability.data.data.fail > i}\r\n\t\t\t\t\t\t<div  on:click={e => updateRating(sheet, ability.id, 'fail', parseInt(ability.data.data.fail)-1 ) } class=\"checkmark\"></div>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<div on:click={e => updateRating(sheet, ability.id, 'fail', parseInt(ability.data.data.fail)+1 ) } class=\"no-checkmark\"></div>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t{/each}\r\n\t\t\t</fail>\r\n\t\t</div>\r\n\t\t\r\n\r\n\t\t</ability>\r\n\t{/each}\r\n\r\n</largecard>\r\n\r\n\r\n<style>\r\n\tlargecard {\r\n\t\tmargin: 0 auto;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tflex-wrap: wrap;\r\n\t\tdisplay:block;\r\n\t}\r\n\r\n\tability {\r\n\t\tdisplay: flex;\r\n\t\tpadding-left: 20px;\r\n\t\twidth: 250px;\r\n\t\tfloat:left;\r\n\t\theight: 80px;\r\n\r\n\t}\r\n\r\n\r\n\tpass {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\r\n\tfail {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\r\n\tinput {\r\n\t\tborder: none;\r\n\t\twidth: 40px;\r\n\t\tfloat: left;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: white;\r\n\t\tmargin-right: 5px;\r\n\t\tmargin-top: 2px;\r\n\t\theight: 35px;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size:large;\t\r\n\t}\r\n\r\n\th1 { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tpadding-left: 30px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tlabel {\r\n\t\tmargin-top: 3px;\r\n\t\twidth: 100%;\r\n\t\tdisplay:block;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\tlabel:hover {\r\n\r\n\t}\r\n\t.sub {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\tbackground: rgba(0, 0, 0, 0.05);\r\n\r\n\t}\r\n\r\n\t.header { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size: large;\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n.checkmark:after {\r\n\tcontent: '\u2714';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n.no-checkmark:after {\r\n\tcontent: ' ';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n\r\n</style>", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\timport { identity, validate_each_argument } from \"svelte/internal\";\r\n\timport { updateRating, setMouseDice} from \"./MouseGuardCommon.svelte\";\r\n\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\tlet abilities;\r\n\t$: data = $sheetData.data;\r\n\t$: skills = $sheetData.data.data.itemTypes.skill;\r\n\r\n\r\n</script>\r\n\r\n<largecard>\r\n\t<h1>Skills</h1>\r\n\t{#each skills as skill}\r\n\t\t<skill>\r\n\t\t<div name=\"{skill.id}\">\r\n\t\t\t<label on:click={e => setMouseDice(sheet, skill.data.data.rank) }  class=\"header\"><a>{game.i18n.localize( skill.name )}</a>: </label>\r\n\t\t\t<input name=\"{skill.id}\" type=\"number\" value=\"{skill.data.data.rank}\" on:change={e => updateRating(sheet,e.target.name, 'rank', parseInt(e.target.value)) }/>\r\n\t\t\t<pass>P:\r\n\t\t\t{#each {length: parseInt(skill.data.data.rank) +1} as _, i}\r\n\t\t\t\t{#if skill.data.data.pass > i}\r\n\t\t\t\t\t<div  on:click={e => updateRating(sheet,skill.id, 'pass', parseInt(skill.data.data.pass)-1 ) }  class=\"checkmark\"></div>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<div on:click={e => updateRating(sheet,skill.id, 'pass', parseInt(skill.data.data.pass)+1 ) }  class=\"no-checkmark\"></div>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t\t</pass>\r\n\t\t\t<fail>F:\r\n\t\t\t\t{#each {length: parseInt(skill.data.data.rank) } as _, i}\r\n\t\t\t\t\t{#if skill.data.data.fail > i}\r\n\t\t\t\t\t\t<div  on:click={e => updateRating(sheet,skill.id, 'fail', parseInt(skill.data.data.fail)-1 ) } class=\"checkmark\"></div>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<div on:click={e => updateRating(sheet,skill.id, 'fail', parseInt(skill.data.data.fail)+1 ) } class=\"no-checkmark\"></div>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t{/each}\r\n\t\t\t</fail>\r\n\t\t</div>\r\n\t\t<div class=\"item-controls\">\r\n\t\t\t<a on:click={sheet?._onItemDelete(skill._id)} class=\"item-control item-delete\" title=\"Delete Item\"><i class=\"fas fa-trash\"></i></a>\r\n\t\t</div>\r\n\t\t\r\n\r\n\t\t</skill>\r\n\t{/each}\r\n\r\n</largecard>\r\n\r\n\r\n<style>\r\n\tlargecard {\r\n\t\tmargin: 0 auto;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tflex-wrap: wrap;\r\n\t\tdisplay:block;\r\n\t\t}\r\n\r\n\tskill {\r\n\t\tdisplay: flex;\r\n\t\tpadding-left: 20px;\r\n\t\twidth: 250px;\r\n\t\tfloat:left;\r\n\t\theight: 80px;\r\n\r\n\t}\r\n\r\n\tpass {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\r\n\tfail {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\r\n\tinput {\r\n\t\tborder: none;\r\n\t\twidth: 40px;\r\n\t\tfloat: left;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: white;\r\n\t\tmargin-right: 5px;\r\n\t\tmargin-top: 2px;\r\n\t\theight: 35px;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size:large;\t\r\n\t}\r\n\r\n\th1 { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tpadding-left: 30px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tlabel {\r\n\t\tmargin-top: 3px;\r\n\t\twidth: 100%;\r\n\t\tdisplay:block;\r\n\t}\r\n\t.sub {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\tbackground: rgba(0, 0, 0, 0.05);\r\n\r\n\t}\r\n\r\n\t.header { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size: large;\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n.checkmark:after {\r\n\tcontent: '\u2714';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n.no-checkmark:after {\r\n\tcontent: ' ';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n\r\n</style>", "<script>\r\n\timport { getContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\timport { identity, validate_each_argument } from \"svelte/internal\";\r\n\timport { updateRating, setMouseDice} from \"./MouseGuardCommon.svelte\";\r\n\r\n\t//getContext(\"sheetStore\", dataStore);\t\r\n\tlet sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, sheet } = $sheetData;\r\n\tlet data;\r\n\tlet abilities;\r\n\t$: data = $sheetData.data;\r\n\t$: wises = $sheetData.data.data.itemTypes.wise;\r\n\r\n\r\n</script>\r\n\r\n<largecard>\r\n\t<h1>Wises</h1>\r\n\t{#each wises as wise}\r\n\t\t<wise>\r\n\t\t<div name=\"{wise.id}\">\r\n\t\t\t<label on:click={e => setMouseDice(sheet, wise.data.data.rank) }  class=\"header\"><a>{game.i18n.localize( wise.name )}</a>: </label>\r\n\t\t\t<input name=\"{wise.id}\" type=\"number\" value=\"{wise.data.data.rank}\" on:change={e => updateRating(sheet,e.target.name, 'rank', parseInt(e.target.value)) }/>\r\n\t\t\t<pass>P: \r\n\t\t\t{#each {length: parseInt(wise.data.data.rank) +1} as _, i}\r\n\t\t\t\t{#if wise.data.data.pass > i}\r\n\t\t\t\t\t<div  on:click={e => updateRating(sheet,wise.id, 'pass', parseInt(wise.data.data.pass)-1 ) }  class=\"checkmark\"></div>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<div on:click={e => updateRating(sheet,wise.id, 'pass', parseInt(wise.data.data.pass)+1 ) }  class=\"no-checkmark\"></div>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t\t</pass>\r\n\t\t\t<fail>F: \r\n\t\t\t\t{#each {length: parseInt(wise.data.data.rank) } as _, i}\r\n\t\t\t\t\t{#if wise.data.data.fail > i}\r\n\t\t\t\t\t\t<div  on:click={e => updateRating(sheet,wise.id, 'fail', parseInt(wise.data.data.fail)-1 ) } class=\"checkmark\"></div>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<div on:click={e => updateRating(sheet,wise.id, 'fail', parseInt(wise.data.data.fail)+1 ) } class=\"no-checkmark\"></div>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t{/each}\r\n\t\t\t</fail>\r\n\t\t</div>\r\n\t\t<div class=\"item-controls\">\r\n\t\t\t<a on:click={sheet?._onItemDelete(wise._id)} class=\"item-control item-delete\" title=\"Delete Item\"><i class=\"fas fa-trash\"></i></a>\r\n\t\t</div>\r\n\t\t</wise>\r\n\t{/each}\r\n    <ol>\r\n        <li class=\"item flexrow item-header\">\r\n            <div class=\"item-image\"></div>\r\n            <div class=\"item-name\"></div>\r\n            <div class=\"item-controls\">\r\n              <a on:click={sheet?._onItemCreate.bind(sheet)} class=\"item-control item-create\" title=\"Create item\" data-type=\"wise\" ><i class=\"fas fa-plus\"></i> Add item</a>\r\n            </div>\r\n          </li>\r\n    </ol>\r\n</largecard>\r\n\r\n\r\n<style>\r\n\tlargecard {\r\n\t\tmargin: 0 auto;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tflex-wrap: wrap;\r\n\t\tdisplay:block;\r\n\t\t}\r\n\r\n\twise {\r\n\t\tdisplay: flex;\r\n\t\tpadding-left: 20px;\r\n\t\twidth: 250px;\r\n\t\tfloat:left;\r\n\t\theight: 80px;\r\n\r\n\t}\r\n\r\n\tpass {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\r\n\tfail {\r\n\t\tdisplay:flex;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t}\r\n\t\r\n\t.item-controls{\r\n\t\tfloat:right;\r\n\t}\r\n\r\n\tinput {\r\n\t\tborder: none;\r\n\t\twidth: 40px;\r\n\t\tfloat: left;\r\n\t\ttext-align: center;\r\n\t\tbackground-color: white;\r\n\t\tmargin-right: 5px;\r\n\t\tmargin-top: 2px;\r\n\t\theight: 35px;\r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size:large;\t\r\n\t}\r\n\r\n\th1 { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tpadding-left: 30px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tlabel {\r\n\t\tmargin-top: 3px;\r\n\t\twidth: 100%;\r\n\t\tdisplay:block;\r\n\t}\r\n\t.sub {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t}\r\n\r\n\ttextarea {\r\n\t\tfont-size:small;\r\n\t\tfont-family: 'Khula', sans-serif;\r\n\t\tborder: none;\r\n\t\tfont-weight: bold;\r\n\t\tbackground: rgba(0, 0, 0, 0.05);\r\n\r\n\t}\r\n\r\n\t.header { \r\n\t\tfont-family: 'Germania One', cursive;\r\n\t\tfont-size: large;\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t}\r\n.checkmark:after {\r\n\tcontent: '\u2714';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n.no-checkmark:after {\r\n\tcontent: ' ';\r\n\tdisplay:block;\r\n\twidth: 12px; \r\n\theight: 12px;\r\n\ttext-align: center;\r\n\tfont-size:10px;\r\n\tborder: 1px solid #aaa;\r\n\tbackground: #f8f8f8;\r\n\tborder-radius: 50%;\r\n\tbox-shadow: inset 0 1px 3px rgba(0,0,0,.3)\r\n}\r\n\r\n\r\n</style>", "<script>\r\n    export let items = [];\r\n    export let activeTabValue = 1;\r\n  \r\n    const handleClick = tabValue => () => (activeTabValue = tabValue);\r\n  </script>\r\n  \r\n  <ul>\r\n  {#each items as item}\r\n      <li class={activeTabValue === item.value ? 'active' : ''}>\r\n          <span on:click={handleClick(item.value)}>{item.label}</span>\r\n      </li>\r\n  {/each}\r\n  </ul>\r\n  {#each items as item}\r\n      {#if activeTabValue == item.value}\r\n      <div class=\"box\">\r\n          <svelte:component this={item.component}/>\r\n      </div>\r\n      {/if}\r\n  {/each}\r\n  <style>\r\n      .box {\r\n          margin-bottom: 10px;\r\n          padding-top: 20px;\r\n\r\n      border-radius: 0 0 .5rem .5rem;\r\n      border-top: 0;\r\n      }\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      padding-left: 0;\r\n      margin-bottom: 0;\r\n      list-style: none;\r\n      border-bottom: 1px solid #000;\r\n    }\r\n      li {\r\n          margin-bottom: -1px;\r\n      }\r\n  \r\n    span {\r\n      border: 1px solid transparent;\r\n      border-top-left-radius: 0.25rem;\r\n      border-top-right-radius: 0.25rem;\r\n      display: block;\r\n      padding: 0.5rem 1rem;\r\n      cursor: pointer;\r\n    }\r\n  \r\n    span:hover {\r\n      border-color: #000 #000 #000;\r\n    }\r\n  \r\n    li.active > span {\r\n      color: #495057;\r\n      background-color: #fff;\r\n      border-color: #dee2e6 #dee2e6 #fff;\r\n    }\r\n  </style>", "<script>\r\n\timport { setContext } from \"svelte\";\r\n\timport { slide } from \"svelte/transition\";\r\n\timport { writable } from \"svelte/store\";\r\n\r\n\t// Component imports\r\n\t//TODO: IMPORTS\r\n\timport MouseGuardActorSheetHeader from \"./MouseGuardActorSheetHeader.svelte\"; \r\n\timport MouseGuardActorSheetMouseDetails from \"./MouseGuardActorSheetMouseDetails.svelte\"; \r\n\timport MouseGuardActorSheetPortrait from \"./MouseGuardActorSheetMousePortrait.svelte\"; \r\n\timport MouseGuardActorSheetMouseRewards from \"./MouseGuardActorSheetMouseRewards.svelte\"; \r\n\timport MouseGuardActorSheetMouseAbilities from \"./MouseGuardActorSheetMouseAbilities.svelte\";\r\n\timport MouseGuardActorSheetMouseSkillAbilityTab from \"./MouseGuardActorSheetMouseSkillAbilityTab.svelte\";\r\n\timport Tabs from \"./Tabs.svelte\";\r\n\r\n\r\n\t//Exports\r\n\texport let dataStore ;\r\n\tsetContext(\"sheetStore\", dataStore);\r\n\t//let sheetData = getContext(\"sheetStore\");\r\n\tlet { actor, data, sheet } = $dataStore;\r\n\r\n\tlet items = [\r\n    { label: \"About\",\r\n\t\t value: 1,\r\n\t\t component: MouseGuardActorSheetMouseDetails\r\n\t\t},\r\n    { label: \"Abilities, Wises, & Skills\",\r\n\t\t value: 2,\r\n\t\t component: MouseGuardActorSheetMouseSkillAbilityTab\r\n\t\t},\r\n    { label: \"Rewards\",\r\n\t\t value: 3,\r\n\t\t component: MouseGuardActorSheetMouseRewards\r\n\t\t},\r\n\t{ label: \"Other\",\r\n\t\t value: 4,\r\n\t\t component: MouseGuardActorSheetPortrait\r\n\t\t}\r\n  ];\r\n\r\n\t\r\n</script>\r\n\r\n<content>\r\n\t<Tabs {items} />\r\n</content>\r\n<style>\r\n\tcontent {\r\n\t\toverflow-y: scroll;\r\n\t}\r\n\t.wrapper {\r\n\t\tdisplay: flex;\r\n\t\tborder: 4px solid black;\r\n\t}\r\n\r\n\t.left {\r\n\t\twidth: 460px;\r\n\t}\r\n\r\n\t.right { \r\n\t\twidth: 365px;\r\n\t}\r\n\r\n\t@media all {\r\n\t.left { order: 1; }\r\n\t.right    { order: 2; }\r\n\r\n}\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Germania+One&family=Khula&display=swap');\r\n\r\n</style>", "\nimport MouseGuardActorSheetBase  from \"./svelte/MouseGuardActorSheetBase.svelte\"; // import Svelte App\nimport { writable } from \"svelte/store\";\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n * @extends {ActorSheet}\n */\nexport class MouseGuardActorSheet extends ActorSheet {\n\n  app = null;\n  dataStore = null;\n\n  /** @inheritdoc */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"mouseguard\", \"sheet\", \"actor\"],\n      template: \"systems/mouseguard/templates/actor-sheetv2.html\",\n      width: 850,\n      height: 600,\n      tabs: []\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  getData() {\n    const context = super.getData();\n    context.systemData = context.data.data;\n    context.sheet = this;\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Everything below here is only needed if the sheet is editable\n    if ( !this.isEditable ) return;\n\n\n    // Item Controls\n    html.find(\".item-control\").click(this._onItemControl.bind(this));\n    html.find(\".items .rollable\").on(\"click\", this._onItemRoll.bind(this));\n\n \n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle click events for Item control buttons within the Actor Sheet\n   * @param event\n   * @private\n   */\n  _onItemControl(event) {\n    event.preventDefault();\n\n    // Obtain event data\n    const button = event.currentTarget;\n    const li = button.closest(\".item\");\n    const item = this.actor.items.get(li?.dataset.itemId);\n\n    // Handle different actions\n    switch ( button.dataset.action ) {\n      case \"create\":\n        const cls = getDocumentClass(\"Item\");\n        return cls.create({name: game.i18n.localize(\"MOUSEGUARD.ItemNew\"), type: \"item\"}, {parent: this.actor});\n      case \"edit\":\n        return item.sheet.render(true);\n      case \"delete\":\n        return item.delete();\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Listen for roll buttons on items.\n   * @param {MouseEvent} event    The originating left click event\n   */\n  _onItemRoll(event) {\n    let button = $(event.currentTarget);\n    const li = button.parents(\".item\");\n    const item = this.actor.items.get(li.data(\"itemId\"));\n    let r = new Roll(button.data('roll'), this.actor.getRollData());\n    return r.toMessage({\n      user: game.user.id,\n      speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n      flavor: `<h2>${item.name}</h2><h3>${button.text()}</h3>`\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  _getSubmitData(updateData) {\n    let formData = super._getSubmitData(updateData);\n    return formData;\n  }\n\n  _setMouseDice(count){\n    game.mouseguard.RollCount = count;\n    game.mouseguard.updateDisplay(count);\n  }\n\n  async _updateActorAbility(id, type, value) {\n    await this.actor.updateEmbeddedDocuments('Item', [{_id: id, data: {[type]:value}}])\n  }\n\n  async _updateEmbededItem(id, _data) {\n    await this.actor.updateEmbeddedDocuments('Item', [{_id: id, data: _data}])\n    //console.log(this.actor)\n  }\n\n  async _onItemDelete(itemId) {\n    const item = this.actor.items.get(itemId);\n    item.delete();\n    this.render();\n  }\n\n  async _onItemCreate(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    // Get the type of item to create.\n    const type = header.dataset.type;\n    // Grab any data associated with this control.\n    const data = duplicate(header.dataset);\n    // Initialize a default name.\n    const name = `New ${type.capitalize()}`;\n    // Prepare the item object.\n    const itemData = {\n      name: name,\n      type: type,\n      data: data\n    };\n    itemData.data = {rank:1}\n    // Remove the type from the dataset since it's in the itemData.type prop.\n    delete itemData.data[\"type\"];\n    // Finally, create the item!\n    //console.log(itemData);\n    return await Item.create(itemData, {parent: this.actor}).then( item => { item.sheet.render(true); });\n    \n  }\n  \n  render(force=false, options={}) { \n    // Grab the sheetdata for both updates and new apps.\n    let sheetData = this.getData();\n    // Exit if Vue has already rendered.\n    if (this.app !== null) {\n      let states = Application.RENDER_STATES;\n      if (this._state == states.RENDERING || this._state == states.RENDERED) {\n        // Update the Datastore.\n        this.dataStore?.set(sheetData);\n        return;\n      }\n    }\n    // Run the normal Foundry render once.\n    this._render(force, options).catch(err => {\n      err.message = `An error occurred while rendering ${this.constructor.name} ${this.appId}: ${err.message}`;\n      console.error(err);\n      this._state = Application.RENDER_STATES.ERROR;\n    })\n    // Run Svelte's render, assign it to our prop for tracking.\n    .then(rendered => {\n      // Prepare the actor data.\n      this.dataStore = writable(sheetData);\n      //console.log(sheetData);\n      this.app = new MouseGuardActorSheetBase({\n        target: this.element.find(\"form\").get(0),\n        props: {\n          dataStore: this.dataStore,\n          //name: 'world',\n        },\n      });\n    })\n    // Update editable permission\n    options.editable = options.editable ?? this.object.isOwner;\n  \n    // Register the active Application with the referenced Documents\n    this.object.apps[this.appId] = this;\n    // Return per the overridden method.\n    return this;\n  }\n  \n  \n  \n  close (options={}){\n    if (this.app != null) {\n      this.app.$destroy();\n      this.app = null;\n      this.dataStore = null;\n    }\n    return super.close(options);\n  }\n  \n\n\n}\n", "/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n * @return {Promise}\n */\nexport const preloadHandlebarsTemplates = async function() {\n\n  // Define template paths to load\n  const templatePaths = [\n    // Attribute list partial.\n    \"systems/mouseguard/templates/parts/sheet-attributes.html\",\n    \"systems/mouseguard/templates/parts/sheet-groups.html\"\n  ];\n\n  // Load the template parts\n  return loadTemplates(templatePaths);\n};", "/**\n * Create a Macro from an attribute drop.\n * Get an existing mouseguard macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nexport async function createMouseGuardMacro(data, slot) {\n  const command = `const roll = new Roll(\"${data.roll}\", actor ? actor.getRollData() : {});\n  roll.toMessage({speaker, flavor: \"${data.label}\"});`;\n  let macro = game.macros.entities.find(m => (m.name === item.label) && (m.command === command));\n  if (!macro) {\n    macro = await Macro.create({\n      name: data.label,\n      type: \"script\",\n      command: command,\n      flags: { \"mouseguard.attrMacro\": true }\n    });\n  }\n  game.user.assignHotbarMacro(macro, slot);\n  return false;\n}\n", "export class MouseDie extends Die {\r\n    constructor(termData ) {\r\n        termData.faces=6;\r\n        super(termData);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static DENOMINATION = \"m\";\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    getResultLabel(result) {\r\n        return {\r\n        \"1\": '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n        \"2\": '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n        \"3\": '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n        \"4\": '<img src=\"systems/mouseguard/assets/dice/sword.png\" />',\r\n        \"5\": '<img src=\"systems/mouseguard/assets/dice/sword.png\" />',\r\n        \"6\": '<img src=\"systems/mouseguard/assets/dice/axe.png\" />'\r\n        }[result.result];\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nconst mouseChatData = async (roll, chatOptions) => {\r\n    const isPrivate = chatOptions.isPrivate;\r\n    return{\r\n      formula: isPrivate ? \"???\" : roll._formula,\r\n      flavor: isPrivate ? null : chatOptions.flavor,\r\n      user: chatOptions.user,\r\n      tooltip: isPrivate ? \"\" : await roll.getTooltip(),\r\n      result: isPrivate ? \"?\" : roll.result,\r\n      dice_count: isPrivate ? \"?\" : roll.terms[0].number,\r\n      drop: false,\r\n      claimed: roll.claimed ?? false,\r\n    }\r\n  }\r\n\r\n\r\nexport class MouseRoll extends Roll {\r\n    constructor(...args) {\r\n      super(...args);\r\n    }\r\n  \r\n\r\n  \r\n    /**\r\n     * Render a DropRoll instance to HTML\r\n     * @param {object} [chatOptions]      An object configuring the behavior of the resulting chat message.\r\n     * @return {Promise<string>}          The rendered HTML template as a string\r\n     */\r\n    async render(chatOptions={}) {\r\n      chatOptions = foundry.utils.mergeObject({\r\n        user: game.user.id,\r\n        flavor: null,\r\n        template: this.constructor.CHAT_TEMPLATE,\r\n        blind: false\r\n      }, chatOptions);\r\n  \r\n      // Execute the roll, if needed\r\n      if (!this._evaluated) this.evaluate();\r\n  \r\n      // Define chat data\r\n      let chatData = await mouseChatData(this, chatOptions);\r\n  \r\n      // Render the roll display template\r\n      return renderTemplate(chatOptions.template, chatData);\r\n    }\r\n  \r\n    static CHAT_TEMPLATE = 'systems/mouseguard/templates/dice/roll.html'\r\n  }\r\n\r\n", "\r\n/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {FormApplication}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\n\r\nexport default class ConflictTracker extends FormApplication {\r\n\r\n\r\n    constructor(object={}, options={}) {\r\n      super(object, options);\r\n  \r\n      this.isRunningQueue = false;\r\n      if (options?.menu) {\r\n        this.menu = options.menu;\r\n      }\r\n    }\r\n\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      id: \"conflict-tracker\",\r\n      classes: [\"mouseguard\"],\r\n      title: \"Conflict Tracker\",\r\n      template: \"systems/mouseguard/templates/conflict-tracker.html\",\r\n    });\r\n  }\r\n\r\n  /** @override */\r\n  getData() {\r\n    // Get current value\r\n    const context = super.getData();\r\n    context.isGM = game.user.isGM;\r\n\r\n    const x = $(window).width();\r\n    const y = $(window).height();\r\n\r\n    //this.position.left = x - 505;\r\n    //this.position.top = y - 75;\r\n    this.position.left = x/2 - 505/2;\r\n    this.position.top = 10;\r\n    this.position.width = 150;\r\n    this.position.height = 105;\r\n\r\n    // filter menu based on role.\r\n\r\n    //const menu = this.menu.filter((m) => game.user.hasRole(m.minimumRole) || !m.minimumRole);\r\n\r\n    // Return data\r\n    return context;\r\n  }\r\n\r\n    /** @override */\r\n    async close(options = {}) {};\r\n\r\n      /** @override */\r\n  activateListeners(html) {\r\n\r\n  }\r\n}\r\n", "\r\n\r\n/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {Combatant}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nexport default class MouseCombatant extends Combatant {\r\n\r\n    constructor(...args) {\r\n        super(...args);\r\n        //this.ConflictCaptain = false;\r\n      }\r\n\r\n    prepareDerivedData(){\r\n        super.prepareDerivedData;\r\n\r\n    }\r\n\r\n      getData() {\r\n        // Get current value\r\n        const context = super.getData();\r\n        //context.data.ConflictCaptain = this.ConflictCaptain;\r\n        return context;\r\n      }\r\n\r\n    get ConflictCaptain() {\r\n        return this.getFlag('mouseguard', 'ConflictCaptain');\r\n    }\r\n\r\n    async setConflictCaptain(value) {\r\n        return this.setFlag('swade', 'ConflictCaptain', value);\r\n    }\r\n\r\n    async _preCreate(data, options, user) {\r\n        await super._preCreate(data, options, user);\r\n        this.data.update({\r\n            flags: {\r\n                mouseguard: {\r\n                    ConflictCaptain: false,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n", "\r\n\r\n/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {Combat}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nexport default class MouseCombat extends Combat {\r\n\r\n    constructor(object={}, options={}) {\r\n        super(object, options);\r\n      }\r\n\r\n    /** @override */\r\n    getData() {\r\n    const context = super.getData();\r\n    return context;\r\n    }\r\n\r\n    get getGoal() {\r\n        return this.getFlag('mouseguard', 'ConflictCaptain');\r\n    }\r\n\r\n    get getConflictCaptain() {\r\n        return this.getFlag('mouseguard', 'ConflictCaptain');\r\n    }\r\n\r\n    async setConflictCaptain(value) {\r\n        return this.setFlag('swade', 'ConflictCaptain', value);\r\n    }\r\n\r\n    async _preCreate(data, options, user) {\r\n        await super._preCreate(data, options, user);\r\n        this.data.update({\r\n            flags: {\r\n                mouseguard: {\r\n                    ConflictCaptain: NaN,\r\n                    goal: NaN,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    async startCombat() {\r\n        let goal = this.data.flags.mouseguard.goal;\r\n        let CC = this.data.flags.mouseguard.ConflictCaptain;\r\n\r\n        if (!CC ) {\r\n            ui.notifications.error(\"A Conflict Captain Must be set to start a combat\");\r\n            return false;\r\n        }\r\n        if (goal == null ) {\r\n            console.log(\"I need a goal\"); \r\n            return false;\r\n        }\r\n\r\n        if (!!goal == false && CC ) return this.update({round: 1, turn: 0});\r\n      }    \r\n\r\n\r\n\r\n}\r\n\r\n\r\n", "\r\n\r\n/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {CombatTracker}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nimport { compute_rest_props } from \"svelte/internal\";\r\n\r\nexport default class MouseCombatTracker extends CombatTracker {\r\n\r\n\r\n\r\n\tstatic get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n        id: \"combat\",\r\n        template: \"systems/mouseguard/templates/sidebar/combat-tracker.html\",\r\n        title: \"Combat Tracker\",\r\n        scrollY: [\".directory-list\"]\r\n      });\r\n    }\r\n\r\n    _getEntryContextOptions() {\r\n        return [\r\n            {\r\n                name: \"COMBAT.ConflictCaptain\",\r\n                icon: '<i class=\"fas fa-dice-d20\"></i>',\r\n                callback: li => {\r\n                    const combatant = this.viewed.combatants.get(li.data(\"combatant-id\"));\r\n                    console.log('captain: ' +!!this.viewed.data.flags.mouseguard.ConflictCaptain)\r\n                    console.log(combatant.id)\r\n\r\n                    if (this.viewed.data.flags.mouseguard.ConflictCaptain == combatant.id) {\r\n                        //Unset if self\r\n                        console.log('Toggling Captain to Off')\r\n                        this.viewed.setFlag('mouseguard','ConflictCaptain', NaN)\r\n                        return combatant.setFlag('mouseguard','ConflictCaptain',false)\r\n                    } \r\n                    if (!!this.viewed.data.flags.mouseguard.ConflictCaptain == false) {\r\n                        // New Captain Never had an old one\r\n                        if ( combatant ) {\r\n                            //Set Flag on New Captain\r\n                            console.log('New Captain');\r\n                            this.viewed.setFlag('mouseguard','ConflictCaptain', li.data(\"combatant-id\"))\r\n                            return combatant.setFlag('mouseguard','ConflictCaptain',true)\r\n                        }\r\n                    } else {\r\n                        ui.notifications.error(\"A Conflict Captain Has Already Been Set\");\r\n                        return false;\r\n                    }\r\n\r\n                    //Should never get here\r\n                     console.log(this)\r\n                    //console.log('combat id:' + this.viewed.data._id)\r\n                    //if ( combatant ) return combatant.setFlag('mouseguard','ConflictCaptain',true);\r\n                }\r\n              },\r\n          {\r\n            name: \"COMBAT.CombatantUpdate\",\r\n            icon: '<i class=\"fas fa-edit\"></i>',\r\n            callback: this._onConfigureCombatant.bind(this)\r\n          },\r\n          {\r\n            name: \"COMBAT.CombatantRemove\",\r\n            icon: '<i class=\"fas fa-trash\"></i>',\r\n            callback: li => {\r\n              const combatant = this.viewed.combatants.get(li.data(\"combatant-id\"));\r\n              if ( combatant ) return combatant.delete();\r\n            }\r\n          }\r\n        ];\r\n      }\r\n\r\n\r\n\r\n\r\n      async getData(options) {\r\n\r\n        // Get the combat encounters possible for the viewed Scene\r\n        const combat = this.viewed;\r\n        const hasCombat = combat !== null;\r\n        const combats = this.combats;\r\n        const currentIdx = combats.findIndex(c => c === combat);\r\n        const previousId = currentIdx > 0 ? combats[currentIdx-1].id : null;\r\n        const nextId = currentIdx < combats.length - 1 ? combats[currentIdx+1].id : null;\r\n        const settings = game.settings.get(\"core\", Combat.CONFIG_SETTING);\r\n    \r\n        // Prepare rendering data\r\n        const data = {\r\n          user: game.user,\r\n          combats: combats,\r\n          currentIndex: currentIdx + 1,\r\n          combatCount: combats.length,\r\n          hasCombat: hasCombat,\r\n          combat,\r\n          turns: [],\r\n          previousId,\r\n          nextId,\r\n          started: this.started,\r\n          control: false,\r\n          settings\r\n        };\r\n        if ( !hasCombat ) return data;\r\n    \r\n        // Format information about each combatant in the encounter\r\n        let hasDecimals = false;\r\n        const turns = [];\r\n        for ( let [i, combatant] of combat.turns.entries() ) {\r\n          if ( !combatant.isVisible ) continue;\r\n    \r\n          // Prepare turn data\r\n          const resource = combatant.permission >= CONST.ENTITY_PERMISSIONS.OBSERVER ? combatant.resource : null\r\n          const turn = {\r\n            id: combatant.id,\r\n            name: combatant.name,\r\n            img: combatant.img,\r\n            active: i === combat.turn,\r\n            owner: combatant.isOwner,\r\n            defeated: combatant.data.defeated,\r\n            flags: combatant.data.flags,\r\n            hidden: combatant.hidden,\r\n            initiative: combatant.initiative,\r\n            hasRolled: combatant.initiative !== null,\r\n            hasResource: resource !== null,\r\n            resource: resource\r\n          };\r\n          if ( Number.isFinite(turn.initiative) && !Number.isInteger(turn.initiative) ) hasDecimals = true;\r\n          turn.css = [\r\n            turn.active ? \"active\" : \"\",\r\n            turn.hidden ? \"hidden\" : \"\",\r\n            turn.defeated ? \"defeated\" : \"\"\r\n          ].join(\" \").trim();\r\n    \r\n          // Cached thumbnail image for video tokens\r\n          if ( VideoHelper.hasVideoExtension(turn.img) ) {\r\n            if ( combatant._thumb ) turn.img = combatant._thumb;\r\n            else turn.img = combatant._thumb = await game.video.createThumbnail(combatant.img, {width: 100, height: 100});\r\n          }\r\n    \r\n          // Actor and Token status effects\r\n          turn.effects = new Set();\r\n          if ( combatant.token ) {\r\n            combatant.token.data.effects.forEach(e => turn.effects.add(e));\r\n            if ( combatant.token.data.overlayEffect ) turn.effects.add(combatant.token.data.overlayEffect);\r\n          }\r\n          if ( combatant.actor ) combatant.actor.temporaryEffects.forEach(e => {\r\n            if ( e.getFlag(\"core\", \"statusId\") === CONFIG.Combat.defeatedStatusId ) turn.defeated = true;\r\n            else if ( e.data.icon ) turn.effects.add(e.data.icon);\r\n          });\r\n          turns.push(turn);\r\n        }\r\n    \r\n        // Format initiative numeric precision\r\n        const precision = CONFIG.Combat.initiative.decimals;\r\n        turns.forEach(t => {\r\n          if ( t.initiative !== null ) t.initiative = t.initiative.toFixed(hasDecimals ? precision : 0);\r\n        });\r\n    \r\n        // Merge update data for rendering\r\n        return foundry.utils.mergeObject(data, {\r\n          round: combat.data.round,\r\n          turn: combat.data.turn,\r\n          turns: turns,\r\n          control: combat.combatant?.players?.includes(game.user)\r\n        });\r\n      }\r\n\r\n\r\n}\r\n\r\n\r\n", "/**\r\n * A simple and flexible system for world-building using an arbitrary collection of character and item attributes\r\n * Author: Atropos\r\n */\r\n\r\n// Import Modules\r\nimport { MouseGuardActor } from \"./actor.js\";\r\nimport { MouseGuardItem } from \"./item.js\";\r\nimport { MouseGuardItemSheet } from \"./item-sheet.js\";\r\nimport { MouseGuardActorSheet } from \"./actor-sheet.js\";\r\nimport { preloadHandlebarsTemplates } from \"./templates.js\";\r\nimport { createMouseGuardMacro } from \"./macro.js\";\r\nimport { MouseDie, MouseRoll } from \"./mousedie.js\";\r\nimport ConflictTracker from \"./conflict-tracker.js\";\r\nimport MouseCombatant from \"./mouse-combantant.js\";\r\nimport MouseCombat from \"./mouse-combat.js\";\r\nimport MouseCombatTracker from \"./mouse-combat-tracker.js\";\r\n\r\n/* -------------------------------------------- */\r\n/*  Foundry VTT Initialization                  */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Init hook.\r\n */\r\nHooks.once(\"init\", async function() {\r\n  console.log(`Initializing MouseGuard MouseGuard System`);\r\n\r\n  /**\r\n   * Set an initiative formula for the system. This will be updated later.\r\n   * @type {String}\r\n   */\r\n\r\n  let RollCount = 0\r\n\r\n  game.mouseguard = {\r\n    MouseGuardActor,\r\n    createMouseGuardMacro,\r\n    RollCount,\r\n    updateDisplay,\r\n    MouseDie,\r\n    MouseRoll\r\n  };\r\n\r\n\r\n  // Define custom Entity classes\r\n  CONFIG.Actor.documentClass = MouseGuardActor;\r\n  CONFIG.Item.documentClass = MouseGuardItem;\r\n  CONFIG.Dice.rolls.push(MouseRoll);\r\n\r\n  \r\n  CONFIG.Combatant.documentClass = MouseCombatant;\r\n  CONFIG.Combat.documentClass = MouseCombat;\r\n  CONFIG.ui.combat = MouseCombatTracker;\r\n\r\n  CONFIG.Combat.initiative = {\r\n    formula: \"1d20\",\r\n    decimals: 2\r\n  };\r\n\r\n\r\n  \r\n  // Register sheet application classes\r\n  Actors.unregisterSheet(\"core\", ActorSheet);\r\n  Actors.registerSheet(\"mouseguard\", MouseGuardActorSheet, { makeDefault: true });\r\n  Items.unregisterSheet(\"core\", ItemSheet);\r\n  Items.registerSheet(\"mouseguard\", MouseGuardItemSheet, { makeDefault: true });\r\n\r\n  // Register system settings\r\n  game.settings.register(\"mouseguard\", \"macroShorthand\", {\r\n    name: \"SETTINGS.MouseGuardMacroShorthandN\",\r\n    hint: \"SETTINGS.MouseGuardMacroShorthandL\",\r\n    scope: \"world\",\r\n    type: Boolean,\r\n    default: true,\r\n    config: true\r\n  });\r\n\r\n  // Register initiative setting.\r\n  game.settings.register(\"mouseguard\", \"initFormula\", {\r\n    name: \"SETTINGS.MouseGuardInitFormulaN\",\r\n    hint: \"SETTINGS.MouseGuardInitFormulaL\",\r\n    scope: \"world\",\r\n    type: String,\r\n    default: \"1d20\",\r\n    config: true,\r\n    onChange: formula => _simpleUpdateInit(formula, true)\r\n  });\r\n\r\n  // Retrieve and assign the initiative formula setting.\r\n  const initFormula = game.settings.get(\"mouseguard\", \"initFormula\");\r\n  _simpleUpdateInit(initFormula);\r\n\r\n  /**\r\n   * Update the initiative formula.\r\n   * @param {string} formula - Dice formula to evaluate.\r\n   * @param {boolean} notify - Whether or not to post nofications.\r\n   */\r\n  function _simpleUpdateInit(formula, notify = false) {\r\n    const isValid = Roll.validate(formula);\r\n    if ( !isValid ) {\r\n      if ( notify ) ui.notifications.error(`${game.i18n.localize(\"MOUSEGUARD.NotifyInitFormulaInvalid\")}: ${formula}`);\r\n      return;\r\n    }\r\n    CONFIG.Combat.initiative.formula = formula;\r\n  }\r\n\r\n  /**\r\n   * Slugify a string.\r\n   */\r\n  Handlebars.registerHelper('slugify', function(value) {\r\n    return value.slugify({strict: true});\r\n  });\r\n\r\n  // Preload template partials\r\n  await preloadHandlebarsTemplates();\r\n});\r\n\r\n/**\r\n * Macrobar hook.\r\n */\r\n//Hooks.on(\"hotbarDrop\", (bar, data, slot) => createMouseGuardMacro(data, slot));\r\n\r\n\r\nHooks.once(\"init\", async function () {\r\n  CONFIG.Dice.terms[\"m\"] = MouseDie;\r\n  CONFIG.Dice.terms[\"6\"] = MouseDie;\r\n});\r\n\r\n\r\n\r\nHooks.once(\"diceSoNiceReady\", (dice3d) => {\r\n  let dicetheme =\"mouseguard\";\r\n  if (!dicetheme || dicetheme == \"mouseguard\") {\r\n    dice3d.addSystem({ id: \"mouseguard\", name: \"Mouse Guard\" }, true);\r\n\r\n    dice3d.addDicePreset(\r\n      {\r\n        type: \"dm\",\r\n        labels:[\r\n          'systems/mouseguard/assets/dice/snake.png', \r\n          'systems/mouseguard/assets/dice/snake.png', \r\n          'systems/mouseguard/assets/dice/snake.png', \r\n          'systems/mouseguard/assets/dice/sword.png', \r\n          'systems/mouseguard/assets/dice/sword.png', \r\n          'systems/mouseguard/assets/dice/axe.png'\r\n        ],\r\n        colorset: \"white\",\r\n        system: \"mouseguard\",\r\n      },\r\n      \"d6\"\r\n    );\r\n\r\n  }\r\n\r\n  //sw dice colors\r\n\r\n  dice3d.addColorset({\r\n    name: \"white-mg\",\r\n    description: \"Mouse Guard white\",\r\n    category: \"Colors\",\r\n    foreground: \"#000000\",\r\n    background: \"#ffffff\",\r\n    outline: 'black',\r\n    texture: 'none',\r\n    material: 'plastic'\r\n  });\r\n});\r\n\r\n\r\nHooks.on('renderSidebarTab', (app, html, data) => {\r\n  console.log('Render Sidebar Mouse Pool?');\r\n  const template = './systems/mouseguard/templates/mousetray.html';\r\n\r\n  let $chat_form = html.find('#chat-form');\r\n  renderTemplate(template).then(c => {\r\n    let $content = $(c);\r\n    $chat_form.after($content);\r\n    $content.find('.mouse_dice_button').on('mousedown', event => {\r\n      event.preventDefault();\r\n\r\n      switch (event.which) {\r\n        case 1:\r\n            game.mouseguard.RollCount++;\r\n            break;\r\n        case 3:\r\n          game.mouseguard.RollCount--;\r\n            break;\r\n      }\r\n\r\n      if (game.mouseguard.RollCount < 1) game.mouseguard.RollCount = 0;\r\n\r\n      // Render Dice in Dice Pool Area\r\n      updateDisplay(game.mouseguard.RollCount);\r\n\r\n    });\r\n\r\n    $content.find('.mouse_roll_button').on('click', event => {\r\n      event.preventDefault();\r\n      let $self = $(event.currentTarget);\r\n      let dataset = event.currentTarget.dataset;\r\n      \r\n      if (game.mouseguard.RollCount > 0){\r\n        /*\r\n        let $chat = html.find('#chat-form textarea');\r\n        $chat.val('/r ' + game.mouseguard.RollCount + 'dmcs>3');\r\n        let spoofed = $.Event('keydown');\r\n        spoofed.which = 13;\r\n        spoofed.keycode = 13;\r\n        spoofed.code = 'Enter';\r\n        spoofed.key = 'Enter';\r\n        html.find('#chat-message').trigger(spoofed);\r\n        */\r\n        let actor = game.user.character ?? canvas.tokens.controlled[0]?.actor;\r\n        \r\n        var roll = new MouseRoll(game.mouseguard.RollCount+\"dmcs>3\");\r\n        roll.evaluate({async: true});\r\n        roll.toMessage({\r\n          user: game.user.id,\r\n          speaker: ChatMessage.getSpeaker({actor: actor})\r\n        });\r\n\r\n        game.mouseguard.RollCount = 0;\r\n        updateDisplay(0);\r\n      }\r\n\r\n    });\r\n\r\n   });\r\n});\r\n\r\nHooks.once(\"ready\", async () => {\r\n  //const cTracker = new ConflictTracker(undefined, {  });\r\n  //cTracker.render(true);\r\n});\r\n\r\nfunction updateDisplay(count) {\r\n  //let $mouse_rolls = html.find('.mouse-dice-roll');\r\n  let mouse_rolls =  document.getElementById(\"mouse-dice-roll\");\r\n  let diceHTML = '<li class=\"roll mousedie d6 \"><img src=\"systems/mouseguard/assets/dice/sword.png\" height=\"24\" width=\"24\"></li>';\r\n  let theHTML = '';\r\n\r\n  for(let i=0; i< count; i++){\r\n    theHTML += diceHTML;\r\n  }\r\n  mouse_rolls.innerHTML = theHTML;\r\n};\r\n\r\n\r\n"],
  "mappings": "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",
  "names": []
}
