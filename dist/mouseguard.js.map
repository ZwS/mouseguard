{
  "version": 3,
  "sources": ["../module/actor.js", "../module/item.js", "../module/item-sheet.js", "../node_modules/svelte/internal/index.mjs", "../module/svelte/module/svelte/MouseGuardEditor.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseDetails.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseRewards.svelte", "../module/svelte/module/svelte/MouseGuardCommon.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseAbilities.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseSkills.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseWises.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseTraits.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseDispo.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMousePortrait.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetMouseName.svelte", "../module/svelte/module/svelte/MouseGuardActorSheetBase.svelte", "../node_modules/svelte/store/index.mjs", "../module/actor-sheet.js", "../module/svelte/module/svelte/MouseGuardActorSheetHeader.svelte", "../module/svelte/module/svelte/MouseGuardNPCActorSheetBody.svelte", "../module/svelte/module/svelte/MouseGuardNPCActorSheetBase.svelte", "../module/npcactor-sheet.js", "../module/templates.js", "../module/macro.js", "../module/mousedie.js", "../module/conflict-tracker.js", "../module/mouse-combantant.js", "../module/socket.js", "../module/mouse-combat.js", "../module/mouse-combat-tracker.js", "../module/mouseguard.js"],
  "sourcesContent": ["//import { EntitySheetHelper } from \"./helper.js\";\r\n\r\n/**\r\n * Extend the base Actor document to support attributes and groups with a custom template creation dialog.\r\n * @extends {Actor}\r\n */\r\nexport class MouseGuardActor extends Actor {\r\n    /** @inheritdoc */\r\n    prepareDerivedData() {\r\n        super.prepareDerivedData();\r\n        //this.system.groups = this.system.groups || {};\r\n        //this.system.attributes = this.system.attributes || {};\r\n    }\r\n\r\n    prepareData() {\r\n        super.prepareData();\r\n        //const actorData = this.data;\r\n        //console.log(actorData);\r\n        this._prepareCharacterData(this);\r\n    }\r\n\r\n    _prepareCharacterData(actorData) {\r\n        this.system.itemTypes = this.itemTypes;\r\n        //mergeObject(actorData.data, this.itemTypes)\r\n    }\r\n\r\n    async _preCreate(data, options, user) {\r\n        await super._preCreate(data, options, user);\r\n        //this.data.update({name: \"Some other name\"});\r\n        //Create Abilities using localization\r\n\r\n        const abilities = [];\r\n\r\n        let create_ability;\r\n\r\n        if (\r\n            (data.type === \"character\" || data.type === \"mouse\") &&\r\n            this.itemTypes.ability.length <= 0\r\n        ) {\r\n            //Setup Abilities\r\n            create_ability = [\r\n                \"MOUSEGUARD.MNature\",\r\n                \"MOUSEGUARD.Will\",\r\n                \"MOUSEGUARD.Health\",\r\n                \"MOUSEGUARD.Resources\",\r\n                \"MOUSEGUARD.Circles\"\r\n            ];\r\n        } else if (\r\n            data.type === \"weasel\" &&\r\n            this.itemTypes.ability.length <= 0\r\n        ) {\r\n            //Setup Abilities\r\n            create_ability = [\r\n                \"MOUSEGUARD.WNature\",\r\n                \"MOUSEGUARD.Will\",\r\n                \"MOUSEGUARD.Health\",\r\n                \"MOUSEGUARD.Resources\",\r\n                \"MOUSEGUARD.Circles\"\r\n            ];\r\n        } else if (\r\n            data.type === \"animal\" &&\r\n            this.itemTypes.ability.length <= 0\r\n        ) {\r\n            //Setup Abilities\r\n            create_ability = [\r\n                game.i18n.localize(\"MOUSEGUARD.Nature\") + \" (\" + data.name + \")\"\r\n            ];\r\n        }\r\n\r\n        if (Object(create_ability).length > 0) {\r\n            for (let i of create_ability) {\r\n                abilities.push({\r\n                    name: i,\r\n                    type: \"ability\"\r\n                });\r\n            }\r\n            this.updateSource({\r\n                items: abilities,\r\n                img: \"systems/mouseguard/assets/icons/seated-mouse.svg\"\r\n            });\r\n        }\r\n    }\r\n}\r\n", "import { EntitySheetHelper } from \"./helper.js\";\n\n/**\n * Extend the base Item document to support attributes and groups with a custom template creation dialog.\n * @extends {Item}\n */\nexport class MouseGuardItem extends Item {\n    /** @inheritdoc */\n    prepareDerivedData() {\n        super.prepareDerivedData();\n        this.system.groups = this.system.groups || {};\n        this.system.attributes = this.system.attributes || {};\n    }\n\n    /* -------------------------------------------- */\n}\n", "import { EntitySheetHelper } from \"./helper.js\";\r\nimport { ATTRIBUTE_TYPES } from \"./constants.js\";\r\n\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class MouseGuardItemSheet extends ItemSheet {\r\n    /** @inheritdoc */\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"mouseguard\", \"sheet\", \"item\"],\r\n            template: \"systems/mouseguard/templates/item-sheet.html\",\r\n            width: 520,\r\n            height: 480,\r\n            tabs: [\r\n                {\r\n                    navSelector: \".sheet-tabs\",\r\n                    contentSelector: \".sheet-body\",\r\n                    initial: \"description\"\r\n                }\r\n            ],\r\n            scrollY: [\".attributes\"]\r\n        });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @inheritdoc */\r\n    getData() {\r\n        const context = super.getData();\r\n        //EntitySheetHelper.getAttributeData(context.data);\r\n        context.systemData = context.item.system;\r\n        //console.log(context);\r\n        return context;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @inheritdoc */\r\n    async activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n}\r\n", "function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if(node.parentNode) {\n    node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro \u2014 we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro \u2014 needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n", "<script>\r\n    import { onDestroy, getContext } from \"svelte\";\r\n    export let target;\r\n\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let data;\r\n    $: data = $sheetData.data;\r\n\r\n    const TextEditor = globalThis.TextEditor;\r\n    let editorContent;\r\n    let height;\r\n    let mce;\r\n    let rawContent = getProperty($sheetData?.data, target) ?? \"\";\r\n    let content = TextEditor.enrichHTML(rawContent, {\r\n        secrets: $sheetData.isOwner,\r\n        async: false\r\n    });\r\n    let editor = {};\r\n\r\n    onDestroy(async () => {\r\n        if (mce) mce.destroy();\r\n    });\r\n\r\n    const createEditor = async () => {\r\n        TextEditor.create({\r\n            target: editorContent,\r\n            invalid_elements: \"iframe\",\r\n            save_onsavecallback: async (m) => {\r\n                //const submit = $sheetData.sheet._onSubmit(new Event(\"submit\"));\r\n                //mce.remove();\r\n                mce = m;\r\n                const isDirty = mce.getContent() !== editor.initial;\r\n                mce.remove();\r\n                // Regex remove the iframe\r\n                if (isDirty) {\r\n                    await $sheetData.sheet._onSubmit(new Event(\"submit\"));\r\n                }\r\n                mce.destroy();\r\n            }\r\n        }).then((m) => {\r\n            editor.m = m;\r\n            mce = m;\r\n            editor.changed = false;\r\n            editor.active = true;\r\n            mce.focus();\r\n            mce.on(\"change\", (ev) => (editor.changed = true));\r\n        });\r\n    };\r\n\r\n    $: {\r\n        rawContent = getProperty($sheetData?.data, target);\r\n        content = TextEditor.enrichHTML(rawContent, {\r\n            secrets: $sheetData.isOwner,\r\n            async: false\r\n        });\r\n    }\r\n</script>\r\n\r\n<div class=\"editor\">\r\n    <span />\r\n    <div\r\n        class=\"editor-content\"\r\n        data-edit={target}\r\n        bind:this={editorContent}\r\n        bind:clientHeight={height}\r\n    >\r\n        {@html content}\r\n    </div>\r\n    {#if $sheetData.editable}\r\n        <a class=\"editor-edit\" on:click|preventDefault={createEditor}>\r\n            <i class=\"fas fa-edit\" />\r\n        </a>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .editor {\r\n        display: grid;\r\n        grid-template-rows: 1px 1fr;\r\n    }\r\n    .editor-content {\r\n        min-height: 100px;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    import MouseGuardEditor from \"./MouseGuardEditor.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let data;\r\n    $: data = $sheetData.data;\r\n</script>\r\n\r\n<largecard>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.About\")}</h1>\r\n    <ul>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Age\")}: </label>\r\n            <input\r\n                name=\"system.details.age\"\r\n                type=\"number\"\r\n                value={data.system.details.age}\r\n                placeholder=\"0\"\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Parents\")}: </label>\r\n            <input\r\n                name=\"system.details.parents\"\r\n                type=\"text\"\r\n                value={data.system.details.parents}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Parents\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Home\")}: </label>\r\n            <input\r\n                name=\"system.details.home\"\r\n                type=\"text\"\r\n                value={data.system.details.home}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Home\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Senior\")}: </label>\r\n            <input\r\n                name=\"system.details.senior_artisan\"\r\n                type=\"text\"\r\n                value={data.system.details.senior_artisan}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Senior\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Fur\")}: </label>\r\n            <input\r\n                name=\"system.details.fur_color\"\r\n                type=\"text\"\r\n                value={data.system.details.fur_color}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Fur\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Mentor\")}: </label>\r\n            <input\r\n                name=\"system.details.mentor\"\r\n                type=\"text\"\r\n                value={data.system.details.mentor}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Mentor\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Cloak\")}: </label>\r\n            <input\r\n                name=\"system.details.cloak_color\"\r\n                type=\"text\"\r\n                value={data.system.details.cloak_color}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Cloak\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Friend\")}: </label>\r\n            <input\r\n                name=\"system.details.friend\"\r\n                type=\"text\"\r\n                value={data.system.details.friend}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Friend\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.GuardRank\")}: </label>\r\n            <input\r\n                name=\"system.details.guard_rank\"\r\n                type=\"text\"\r\n                value={data.system.details.guard_rank}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.GuardRank\")}\r\n            />\r\n        </lineitem>\r\n        <lineitem>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Enemy\")}: </label>\r\n            <input\r\n                name=\"system.details.enemy\"\r\n                type=\"text\"\r\n                value={data.system.details.enemy}\r\n                placeholder={game.i18n.localize(\"MOUSEGUARD.Enemy\")}\r\n            />\r\n        </lineitem>\r\n    </ul>\r\n</largecard>\r\n<h1>{game.i18n.localize(\"MOUSEGUARD.Bio\")}</h1>\r\n<MouseGuardEditor target=\"system.biography\" />\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        display: inline-block;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n    }\r\n\r\n    lineitem {\r\n        margin: auto; /* Magic! */\r\n        display: flex;\r\n        float: left;\r\n        padding: 5px;\r\n        height: 100%;\r\n    }\r\n\r\n    label {\r\n        width: 180px;\r\n        text-align: right;\r\n        margin-top: 3px;\r\n        padding-right: 2px;\r\n        font-weight: bold;\r\n        font-family: \"Khula\", sans-serif;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n    }\r\n\r\n    lineitem input {\r\n        padding-top: 5px;\r\n        pointer-events: auto;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let data;\r\n    $: data = $sheetData.data;\r\n</script>\r\n\r\n<largecard>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Rewards\")}</h1>\r\n    <left class=\"left\">\r\n        <fatebox>\r\n            <label class=\"header\">{game.i18n.localize(\"MOUSEGUARD.Fate\")}</label\r\n            >\r\n            <input\r\n                name=\"system.rewards.fate\"\r\n                type=\"number\"\r\n                value={data.system.rewards.fate}\r\n                placeholder=\"0\"\r\n            />\r\n        </fatebox>\r\n        <personabox>\r\n            <label class=\"header\"\r\n                >{game.i18n.localize(\"MOUSEGUARD.Persona\")}</label\r\n            >\r\n            <input\r\n                name=\"system.rewards.persona\"\r\n                type=\"number\"\r\n                value={data.system.rewards.persona}\r\n                placeholder=\"0\"\r\n            />\r\n        </personabox>\r\n        <checksbox>\r\n            <label class=\"header\"\r\n                >{game.i18n.localize(\"MOUSEGUARD.Checks\")}</label\r\n            >\r\n            <input\r\n                name=\"system.rewards.check\"\r\n                type=\"number\"\r\n                value={data.system.rewards.check}\r\n                placeholder=\"0\"\r\n            />\r\n        </checksbox>\r\n    </left>\r\n    <right class=\"right\">\r\n        <rewardbox>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Belief\")}</label>\r\n            <label class=\"sub\"\r\n                >{@html game.i18n.localize(\"MOUSEGUARD.BeliefSub\")}</label\r\n            >\r\n            <textarea name=\"system.rewards.belief\"\r\n                >{data.system.rewards.belief}</textarea\r\n            >\r\n        </rewardbox>\r\n        <rewardbox>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Instinct\")}</label>\r\n            <label class=\"sub\"\r\n                >{@html game.i18n.localize(\"MOUSEGUARD.InstinctSub\")}</label\r\n            >\r\n            <textarea name=\"system.rewards.instinct\"\r\n                >{data.system.rewards.instinct}</textarea\r\n            >\r\n        </rewardbox>\r\n        <rewardbox>\r\n            <label>{game.i18n.localize(\"MOUSEGUARD.Goal\")}</label>\r\n            <label class=\"sub\"\r\n                >{@html game.i18n.localize(\"MOUSEGUARD.GoalSub\")}</label\r\n            >\r\n            <textarea name=\"system.rewards.goal\"\r\n                >{data.system.rewards.goal}</textarea\r\n            >\r\n        </rewardbox>\r\n    </right>\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        display: flex;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n    }\r\n    input {\r\n        border: none;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        text-align: center;\r\n        display: block;\r\n    }\r\n\r\n    fatebox {\r\n        display: block;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    fatebox input {\r\n        width: 100px;\r\n        height: 100px;\r\n        text-align: center;\r\n        font-size: large;\r\n        background: rgba(0, 0, 0, 0) url(\"../assets/actor/Fate.svg\") center no-repeat;\r\n    }\r\n\r\n    personabox {\r\n        display: block;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    personabox input {\r\n        width: 100px;\r\n        height: 100px;\r\n        text-align: center;\r\n        font-size: large;\r\n        background: rgba(0, 0, 0, 0) url(\"../assets/actor/Persona.svg\") center no-repeat;\r\n    }\r\n\r\n    checksbox {\r\n        display: block;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    checksbox input {\r\n        width: 100px;\r\n        height: 100px;\r\n        text-align: center;\r\n        font-size: large;\r\n        background: rgba(0, 0, 0, 0) url(\"../assets/actor/Checks.svg\") center no-repeat;\r\n    }\r\n\r\n    rewardbox {\r\n        margin-bottom: 10px;\r\n        display: block;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    label {\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n    .sub {\r\n        font-size: small;\r\n        font-family: \"Khula\", sans-serif;\r\n    }\r\n\r\n    textarea {\r\n        font-size: small;\r\n        font-family: \"Khula\", sans-serif;\r\n        border: none;\r\n        font-weight: bold;\r\n        background: rgba(0, 0, 0, 0.05);\r\n    }\r\n\r\n    .left {\r\n        width: 100px;\r\n        display: block;\r\n    }\r\n\r\n    .right {\r\n        width: 85%;\r\n        display: block;\r\n        padding-left: 10px;\r\n    }\r\n</style>\r\n", "<script context=\"module\">\r\n    export function updateRating(sheet, item, type, value) {\r\n        //sheet?._updateActorAbility(item, type, value);\r\n        //console.log (\"updateRating\")\r\n\r\n        const ob = { [type]: value };\r\n        if (type == \"rank\" || type == \"rating\" || type == \"level\") {\r\n            if (value < 1) ob[type] = 1;\r\n            ob.fail = 0;\r\n            ob.pass = 0;\r\n        }\r\n        sheet?._updateEmbededItem(item, ob);\r\n    }\r\n\r\n    export function setMouseDice(sheet, count, message = \"\") {\r\n        sheet?._setMouseDice(count, message);\r\n    }\r\n</script>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n    import { updateRating, setMouseDice } from \"./MouseGuardCommon.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { sheet } = $sheetData;\r\n    let data;\r\n    let abilities;\r\n    $: data = $sheetData.data;\r\n    $: abilities = $sheetData.data.system.itemTypes.ability;\r\n</script>\r\n\r\n<largecard>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Abilities\")}</h1>\r\n    {#each abilities as ability}\r\n        <ability>\r\n            <div name={ability.id}>\r\n                <label\r\n                    on:click={(e) =>\r\n                        setMouseDice(\r\n                            sheet,\r\n                            ability.system.rating,\r\n                            game.i18n.localize(ability.name)\r\n                        )}\r\n                    class=\"header\"\r\n                    ><a>{game.i18n.localize(ability.name)}</a>:\r\n                </label>\r\n                <input\r\n                    name={ability.id}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={ability.system.rating}\r\n                    on:change={(e) =>\r\n                        updateRating(\r\n                            sheet,\r\n                            e.target.name,\r\n                            \"rating\",\r\n                            parseInt(e.target.value)\r\n                        )}\r\n                />\r\n                {#if ability.name === \"MOUSEGUARD.MNature\"}\r\n                    <input\r\n                        name={ability.id}\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={ability.system.tax}\r\n                        on:change={(e) =>\r\n                            updateRating(\r\n                                sheet,\r\n                                e.target.name,\r\n                                \"tax\",\r\n                                parseInt(e.target.value)\r\n                            )}\r\n                    />\r\n                {/if}\r\n                <pass\r\n                    >{game.i18n.localize(\"MOUSEGUARD.P\")}:\r\n                    {#each { length: parseInt(ability.system.rating) + 1 } as _, i}\r\n                        {#if ability.system.pass > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        ability.id,\r\n                                        \"pass\",\r\n                                        parseInt(ability.system.pass) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        ability.id,\r\n                                        \"pass\",\r\n                                        parseInt(ability.system.pass) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </pass>\r\n                <fail\r\n                    >{game.i18n.localize(\"MOUSEGUARD.F\")}:\r\n                    {#each { length: parseInt(ability.system.rating) } as _, i}\r\n                        {#if ability.system.fail > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        ability.id,\r\n                                        \"fail\",\r\n                                        parseInt(ability.system.fail) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        ability.id,\r\n                                        \"fail\",\r\n                                        parseInt(ability.system.fail) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </fail>\r\n            </div>\r\n        </ability>\r\n    {/each}\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n        display: block;\r\n    }\r\n\r\n    ability {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        width: 250px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    pass {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    fail {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 40px;\r\n        float: left;\r\n        text-align: center;\r\n        background-color: white;\r\n        margin-right: 5px;\r\n        margin-top: 2px;\r\n        height: 35px;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n        cursor: pointer;\r\n    }\r\n\r\n    label:hover {\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n    .checkmark:after {\r\n        content: \"\u2714\";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .no-checkmark:after {\r\n        content: \" \";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n    import { updateRating, setMouseDice } from \"./MouseGuardCommon.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { sheet } = $sheetData;\r\n    let data;\r\n    $: data = $sheetData.data;\r\n    $: skills = $sheetData.data.system.itemTypes.skill;\r\n\r\n    const openSkillsCompendium = () => () =>\r\n        game.packs.get(\"mouseguard.skills\").render(true);\r\n</script>\r\n\r\n<largecard>\r\n    <div class=\"item-controls item-create\">\r\n        <a\r\n            on:click={openSkillsCompendium()}\r\n            class=\"item-control\"\r\n            title={game.i18n.localize(\"MOUSEGUARD.AddSkill\")}\r\n            data-type=\"wise\"\r\n            ><i class=\"fas fa-plus\" />\r\n            {game.i18n.localize(\"MOUSEGUARD.AddSkill\")}</a\r\n        >\r\n    </div>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Skills\")}</h1>\r\n    {#each skills as skill}\r\n        <skill>\r\n            <div name={skill.id}>\r\n                <label\r\n                    on:click={(e) =>\r\n                        setMouseDice(\r\n                            sheet,\r\n                            skill.system.rank,\r\n                            game.i18n.localize(skill.name)\r\n                        )}\r\n                    class=\"header\"\r\n                    ><a>{game.i18n.localize(skill.name)}</a>:\r\n                </label>\r\n                <input\r\n                    name={skill.id}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={skill.system.rank}\r\n                    on:change={(e) =>\r\n                        updateRating(\r\n                            sheet,\r\n                            e.target.name,\r\n                            \"rank\",\r\n                            parseInt(e.target.value)\r\n                        )}\r\n                />\r\n                <pass\r\n                    >{game.i18n.localize(\"MOUSEGUARD.P\")}:\r\n                    {#each { length: parseInt(skill.system.rank) + 1 } as _, i}\r\n                        {#if skill.system.pass > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        skill.id,\r\n                                        \"pass\",\r\n                                        parseInt(skill.system.pass) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        skill.id,\r\n                                        \"pass\",\r\n                                        parseInt(skill.system.pass) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </pass>\r\n                <fail\r\n                    >{game.i18n.localize(\"MOUSEGUARD.F\")}:\r\n                    {#each { length: parseInt(skill.system.rank) } as _, i}\r\n                        {#if skill.system.fail > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        skill.id,\r\n                                        \"fail\",\r\n                                        parseInt(skill.system.fail) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        skill.id,\r\n                                        \"fail\",\r\n                                        parseInt(skill.system.fail) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </fail>\r\n            </div>\r\n            <div class=\"item-controls\">\r\n                <a\r\n                    on:click={sheet?._onItemDelete(skill.id)}\r\n                    class=\"item-control item-delete\"\r\n                    title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                >\r\n            </div>\r\n        </skill>\r\n    {/each}\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n        display: block;\r\n    }\r\n\r\n    skill {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        width: 250px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    pass {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    fail {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    .item-controls {\r\n        float: right;\r\n    }\r\n\r\n    .item-create {\r\n        padding-top: 8px;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 40px;\r\n        float: left;\r\n        text-align: center;\r\n        background-color: white;\r\n        margin-right: 5px;\r\n        margin-top: 2px;\r\n        height: 35px;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n    .checkmark:after {\r\n        content: \"\u2714\";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .no-checkmark:after {\r\n        content: \" \";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    import { updateRating, setMouseDice } from \"./MouseGuardCommon.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { sheet } = $sheetData;\r\n    let data;\r\n    $: data = $sheetData.data;\r\n    $: wises = $sheetData.data.system.itemTypes.wise;\r\n</script>\r\n\r\n<largecard>\r\n    <div class=\"item-controls item-create\">\r\n        <a\r\n            on:click={sheet?._onItemCreate.bind(sheet)}\r\n            class=\"item-control\"\r\n            title={game.i18n.localize(\"MOUSEGUARD.AddWise\")}\r\n            data-type=\"wise\"\r\n            ><i class=\"fas fa-plus\" />\r\n            {game.i18n.localize(\"MOUSEGUARD.AddWise\")}</a\r\n        >\r\n    </div>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Wises\")}</h1>\r\n    {#each wises as wise}\r\n        <wise>\r\n            <div name={wise.id}>\r\n                <label\r\n                    on:click={(e) =>\r\n                        setMouseDice(\r\n                            sheet,\r\n                            wise.system.rank,\r\n                            game.i18n.localize(wise.name)\r\n                        )}\r\n                    class=\"header\"\r\n                    ><a>{game.i18n.localize(wise.name)}</a>:\r\n                </label>\r\n                <input\r\n                    name={wise.id}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={wise.system.rank}\r\n                    on:change={(e) =>\r\n                        updateRating(\r\n                            sheet,\r\n                            e.target.name,\r\n                            \"rank\",\r\n                            parseInt(e.target.value)\r\n                        )}\r\n                />\r\n                <pass\r\n                    >{game.i18n.localize(\"MOUSEGUARD.P\")}:\r\n                    {#each { length: parseInt(wise.system.rank) + 1 } as _, i}\r\n                        {#if wise.system.pass > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        wise.id,\r\n                                        \"pass\",\r\n                                        parseInt(wise.system.pass) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        wise.id,\r\n                                        \"pass\",\r\n                                        parseInt(wise.system.pass) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </pass>\r\n                <fail\r\n                    >{game.i18n.localize(\"MOUSEGUARD.F\")}:\r\n                    {#each { length: parseInt(wise.system.rank) } as _, i}\r\n                        {#if wise.system.fail > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        wise.id,\r\n                                        \"fail\",\r\n                                        parseInt(wise.system.fail) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        wise.id,\r\n                                        \"fail\",\r\n                                        parseInt(wise.system.fail) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </fail>\r\n            </div>\r\n            <div class=\"item-controls\">\r\n                <a\r\n                    on:click={sheet?._onItemDelete(wise.id)}\r\n                    class=\"item-control item-delete\"\r\n                    title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                >\r\n            </div>\r\n        </wise>\r\n    {/each}\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n        display: block;\r\n    }\r\n\r\n    wise {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        width: 250px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    pass {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    fail {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    .item-controls {\r\n        float: right;\r\n    }\r\n\r\n    .item-create {\r\n        padding-top: 8px;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 40px;\r\n        float: left;\r\n        text-align: center;\r\n        background-color: white;\r\n        margin-right: 5px;\r\n        margin-top: 2px;\r\n        height: 35px;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n    .checkmark:after {\r\n        content: \"\u2714\";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .no-checkmark:after {\r\n        content: \" \";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n    import { updateRating, setMouseDice } from \"./MouseGuardCommon.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { sheet } = $sheetData;\r\n    let data;\r\n    $: data = $sheetData.data;\r\n    $: traits = $sheetData.data.system.itemTypes.trait;\r\n\r\n    const openCompendium = () => () =>\r\n        game.packs.get(\"mouseguard.traits\").render(true);\r\n</script>\r\n\r\n<largecard>\r\n    <div class=\"item-controls item-create\">\r\n        <a\r\n            on:click={openCompendium()}\r\n            class=\"item-control\"\r\n            title={game.i18n.localize(\"MOUSEGUARD.AddTrait\")}\r\n            data-type=\"wise\"\r\n            ><i class=\"fas fa-plus\" />\r\n            {game.i18n.localize(\"MOUSEGUARD.AddTrait\")}</a\r\n        >\r\n    </div>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Traits\")}</h1>\r\n    {#each traits as trait}\r\n        <trait>\r\n            <div name={trait.id}>\r\n                <label\r\n                    on:click={(e) =>\r\n                        setMouseDice(\r\n                            sheet,\r\n                            trait.system.level,\r\n                            game.i18n.localize(trait.name)\r\n                        )}\r\n                    class=\"header\"\r\n                    ><a>{game.i18n.localize(trait.name)}</a>:\r\n                </label>\r\n                <input\r\n                    name={trait.id}\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"3\"\r\n                    value={trait.system.level}\r\n                    on:change={(e) =>\r\n                        updateRating(\r\n                            sheet,\r\n                            e.target.name,\r\n                            \"level\",\r\n                            parseInt(e.target.value)\r\n                        )}\r\n                />\r\n                <for\r\n                    >{game.i18n.localize(\"MOUSEGUARD.F\")}:\r\n                    {#each { length: 1 } as _, i}\r\n                        {#if trait.system.usedfor > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        trait.id,\r\n                                        \"usedfor\",\r\n                                        parseInt(trait.system.usedfor) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        trait.id,\r\n                                        \"usedfor\",\r\n                                        parseInt(trait.system.usedfor) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </for>\r\n                <pass\r\n                    >{game.i18n.localize(\"MOUSEGUARD.A\")}:\r\n                    {#each { length: 6 } as _, i}\r\n                        {#if trait.system.usedagainst > i}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        trait.id,\r\n                                        \"usedagainst\",\r\n                                        parseInt(trait.system.usedagainst) - 1\r\n                                    )}\r\n                                class=\"checkmark\"\r\n                            />\r\n                        {:else}\r\n                            <div\r\n                                on:click={(e) =>\r\n                                    updateRating(\r\n                                        sheet,\r\n                                        trait.id,\r\n                                        \"usedagainst\",\r\n                                        parseInt(trait.system.usedagainst) + 1\r\n                                    )}\r\n                                class=\"no-checkmark\"\r\n                            />\r\n                        {/if}\r\n                    {/each}\r\n                </pass>\r\n            </div>\r\n            <div class=\"item-controls\">\r\n                <a\r\n                    on:click={sheet?._onItemDelete(trait.id)}\r\n                    class=\"item-control item-delete\"\r\n                    title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                >\r\n            </div>\r\n        </trait>\r\n    {/each}\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n        display: block;\r\n    }\r\n\r\n    trait {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        width: 250px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    pass {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    for {\r\n        display: flex;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    .item-controls {\r\n        float: right;\r\n    }\r\n\r\n    .item-create {\r\n        padding-top: 8px;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 40px;\r\n        float: left;\r\n        text-align: center;\r\n        background-color: white;\r\n        margin-right: 5px;\r\n        margin-top: 2px;\r\n        height: 35px;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n    .checkmark:after {\r\n        content: \"\u2714\";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .no-checkmark:after {\r\n        content: \" \";\r\n        display: block;\r\n        width: 12px;\r\n        height: 12px;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        border: 1px solid #aaa;\r\n        background: #f8f8f8;\r\n        border-radius: 50%;\r\n        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let data;\r\n    $: data = $sheetData.data;\r\n</script>\r\n\r\n<largecard>\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Disposition\")}</h1>\r\n\r\n    <dispoBox>\r\n        <startingBox>\r\n            <label class=\"header\"\r\n                >{game.i18n.localize(\"MOUSEGUARD.Starting\")}\r\n                {game.i18n.localize(\"MOUSEGUARD.Disposition\")}</label\r\n            >\r\n            <input\r\n                class=\"disposition-value\"\r\n                name=\"system.disposition.starting\"\r\n                type=\"number\"\r\n                value={data.system.disposition.starting}\r\n                placeholder=\"0\"\r\n            />\r\n        </startingBox>\r\n        <currentBox>\r\n            <label class=\"header\"\r\n                >{game.i18n.localize(\"MOUSEGUARD.Current\")}\r\n                {game.i18n.localize(\"MOUSEGUARD.Disposition\")}</label\r\n            >\r\n            <input\r\n                class=\"disposition-value\"\r\n                name=\"system.disposition.current\"\r\n                type=\"number\"\r\n                value={data.system.disposition.current}\r\n                placeholder=\"0\"\r\n            />\r\n        </currentBox>\r\n    </dispoBox>\r\n</largecard>\r\n\r\n<style>\r\n    largecard {\r\n        margin: 0 auto;\r\n        display: flex;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    dispoBox {\r\n        margin: auto;\r\n        width: 250px;\r\n        height: 300px;\r\n        display: block;\r\n        font-family: \"Germania One\", cursive;\r\n        background-image: url(\"../assets/actor/DispositionBanner.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position-y: 24px;\r\n    }\r\n\r\n    startingBox {\r\n        margin-top: 66px;\r\n        display: grid;\r\n        grid-template-columns: 125px auto;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    currentBox {\r\n        margin-top: 52px;\r\n        display: grid;\r\n        grid-template-columns: 125px auto;\r\n        font-family: \"Germania One\", cursive;\r\n    }\r\n\r\n    input.disposition-value {\r\n        margin: auto auto auto 12px;\r\n        height: 50px;\r\n        width: 50px;\r\n        text-align: center;\r\n        font-size: 40px;\r\n        background: rgba(0, 0, 0, 0);\r\n        border: none;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        text-align: center;\r\n        display: block;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { actor, sheet } = $sheetData;\r\n    let data;\r\n    $: data = $sheetData.data;\r\n\r\n    /**\r\n     * Opens a File Picker and updates the actor accordingly.\r\n     */\r\n    const filePicker = (event) => {\r\n        const attr = event.currentTarget.dataset.edit;\r\n        const current = getProperty(data, attr);\r\n        const fp = new FilePicker({\r\n            type: \"image\",\r\n            current: current,\r\n            callback: (path) => {\r\n                actor.update({ [attr]: path });\r\n            },\r\n            top: sheet.position.top + 40,\r\n            left: sheet.position.left + 10\r\n        });\r\n        return fp.browse();\r\n    };\r\n</script>\r\n\r\n<portrait>\r\n    <img\r\n        on:click={filePicker}\r\n        class=\"profile-img\"\r\n        src={data.img}\r\n        data-edit=\"img\"\r\n        title={data.name}\r\n        height=\"100\"\r\n        width=\"100\"\r\n    />\r\n</portrait>\r\n\r\n<style>\r\n    img {\r\n        border: none;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let data;\r\n    $: data = $sheetData.data;\r\n</script>\r\n\r\n<div class=\"namebox\">\r\n  <label>{game.i18n.localize(\"MOUSEGUARD.Name\")}</label>\r\n  <input name=\"name\" type=\"text\" value={data.name} placeholder=\"{game.i18n.localize('MOUSEGUARD.Name')}\" />\r\n</div>\r\n\r\n<style>\r\n    .namebox {\r\n        position: relative;\r\n        font-family: \"Germania One\", cursive;\r\n        height: 60px;\r\n        pointer-events: none;\r\n    }\r\n\r\n    .namebox label {\r\n        font-size: 2em;\r\n        padding-left: 30px;\r\n        padding-bottom: 14px;\r\n    }\r\n\r\n    .namebox input {\r\n        background: rgba(0, 0, 0, 0) url(\"../assets/actor/NameBanner.svg\") no-repeat;\r\n        height: 60px;\r\n        width: 300px;\r\n        font-size: 24px;\r\n        padding-left: 20px;\r\n        padding-bottom: 14px;\r\n        pointer-events: auto;\r\n        border: none;\r\n        box-shadow: none;\r\n    }\r\n</style>", "<script>\r\n    import { setContext } from \"svelte\";\r\n\r\n    // Component imports\r\n    //TODO: IMPORTS\r\n    import MouseGuardActorSheetMouseDetails from \"./MouseGuardActorSheetMouseDetails.svelte\";\r\n    import MouseGuardActorSheetMouseRewards from \"./MouseGuardActorSheetMouseRewards.svelte\";\r\n    import MouseGuardActorSheetMouseSkillAbilityTab from \"./MouseGuardActorSheetMouseSkillAbilityTab.svelte\";\r\n    import MouseGuardActorSheetMouseDispo from \"./MouseGuardActorSheetMouseDispo.svelte\";\r\n    import MouseGuardActorSheetPortrait from \"./MouseGuardActorSheetMousePortrait.svelte\";\r\n    import MouseGuardActorSheetMouseName from \"./MouseGuardActorSheetMouseName.svelte\";\r\n\r\n    //Exports\r\n    export let dataStore;\r\n    setContext(\"sheetStore\", dataStore);\r\n\r\n    let items = [\r\n        {\r\n            label: game.i18n.localize(\"MOUSEGUARD.About\"),\r\n            component: MouseGuardActorSheetMouseDetails\r\n        },\r\n        {\r\n            label: game.i18n.localize(\"MOUSEGUARD.Tab2\"),\r\n            value: 2,\r\n            component: MouseGuardActorSheetMouseSkillAbilityTab\r\n        },\r\n        {\r\n            label: game.i18n.localize(\"MOUSEGUARD.Rewards\"),\r\n            component: MouseGuardActorSheetMouseRewards\r\n        },\r\n        {\r\n            label: game.i18n.localize(\"MOUSEGUARD.Disposition\"),\r\n            component: MouseGuardActorSheetMouseDispo\r\n        }\r\n    ];\r\n\r\n    export let activeTabValue = items[0].component;\r\n    const handleClick = tabValue => () => (activeTabValue = tabValue);\r\n</script>\r\n\r\n<content>\r\n    <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n            <MouseGuardActorSheetMouseName />\r\n            <nav class=\"sheet-navigation tabs\">\r\n                {#each items as item}\r\n                    <a class=\"item {activeTabValue === item.component ? 'active' : ''}\" on:click={handleClick(item.component)}>\r\n                        {item.label}\r\n                    </a>\r\n                {/each}\r\n            </nav>\r\n        </div>\r\n        <MouseGuardActorSheetPortrait />\r\n    </div>\r\n    <div class=\"box\">\r\n        {#if activeTabValue}\r\n            <svelte:component this={activeTabValue}/>\r\n        {/if}\r\n    </div>\r\n</content>\r\n\r\n<style>\r\n    content {\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    .box {\r\n        margin-bottom: 10px;\r\n        padding-top: 20px;\r\n        border-radius: 0 0 .5rem .5rem;\r\n        border-top: 0;\r\n    }\r\n\r\n    .flex-container {\r\n        display: flex;\r\n    }\r\n\r\n    .flex-item {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    @import url(\"https://fonts.googleapis.com/css2?family=Germania+One&family=Khula&display=swap\");\r\n</style>\r\n", "import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n", "import MouseGuardActorSheetBase from \"./svelte/MouseGuardActorSheetBase.svelte\"; // import Svelte App\r\nimport { writable } from \"svelte/store\";\r\n\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class MouseGuardActorSheet extends ActorSheet {\r\n    app = null;\r\n    dataStore = null;\r\n\r\n    /** @inheritdoc */\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"mouseguard\", \"sheet\", \"actor\"],\r\n            template: \"systems/mouseguard/templates/actor-sheetv2.html\",\r\n            width: 850,\r\n            height: 600,\r\n            tabs: []\r\n        });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @inheritdoc */\r\n    getData() {\r\n        const context = super.getData();\r\n        context.sheet = this;\r\n        return context;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @inheritdoc */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable) return;\r\n\r\n        // Item Controls\r\n        html.find(\".item-control\").click(this._onItemControl.bind(this));\r\n        html.find(\".items .rollable\").on(\"click\", this._onItemRoll.bind(this));\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Handle click events for Item control buttons within the Actor Sheet\r\n     * @param event\r\n     * @private\r\n     */\r\n    _onItemControl(event) {\r\n        event.preventDefault();\r\n\r\n        // Obtain event data\r\n        const button = event.currentTarget;\r\n        const li = button.closest(\".item\");\r\n        const item = this.actor.items.get(li?.dataset.itemId);\r\n\r\n        // Handle different actions\r\n        switch (button.dataset.action) {\r\n            case \"create\":\r\n                const cls = getDocumentClass(\"Item\");\r\n                return cls.create(\r\n                    {\r\n                        name: game.i18n.localize(\"MOUSEGUARD.ItemNew\"),\r\n                        type: \"item\"\r\n                    },\r\n                    { parent: this.actor }\r\n                );\r\n            case \"edit\":\r\n                return item.sheet.render(true);\r\n            case \"delete\":\r\n                return item.delete();\r\n        }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Listen for roll buttons on items.\r\n     * @param {MouseEvent} event    The originating left click event\r\n     */\r\n    _onItemRoll(event) {\r\n        let button = $(event.currentTarget);\r\n        const li = button.parents(\".item\");\r\n        const item = this.actor.items.get(li.data(\"itemId\"));\r\n        let r = new Roll(button.data(\"roll\"), this.actor.getRollData());\r\n        return r.toMessage({\r\n            user: game.user.id,\r\n            speaker: ChatMessage.getSpeaker({ actor: this.actor }),\r\n            flavor: `<h2>${item.name}</h2><h3>${button.text()}</h3>`\r\n        });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    __onSubmit(event) {\r\n        event = super._onSubmit(event);\r\n        console.log(event);\r\n        return event;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    _getSubmitData(updateData) {\r\n        let formData = super._getSubmitData(updateData);\r\n        return formData;\r\n    }\r\n\r\n    _setMouseDice(count, message = \"\") {\r\n        game.mouseguard.RollCount = count;\r\n        game.mouseguard.RollMessage = message;\r\n        game.mouseguard.updateDisplay(count);\r\n    }\r\n\r\n    async _updateActorAbility(id, type, value) {\r\n        await this.actor.updateEmbeddedDocuments(\"Item\", [\r\n            { _id: id, data: { [type]: value } }\r\n        ]);\r\n    }\r\n\r\n    async _updateEmbededItem(id, _data) {\r\n        await this.actor.updateEmbeddedDocuments(\"Item\", [\r\n            { _id: id, data: _data }\r\n        ]);\r\n        //console.log(this.actor)\r\n    }\r\n\r\n    async _onItemDelete(itemId) {\r\n        console.log(itemId);\r\n        const item = this.actor.items.get(itemId);\r\n        item.delete();\r\n        this.render();\r\n    }\r\n\r\n    async _onItemCreate(event) {\r\n        event.preventDefault();\r\n        const header = event.currentTarget;\r\n        // Get the type of item to create.\r\n        const type = header.dataset.type;\r\n        // Grab any data associated with this control.\r\n        const data = duplicate(header.dataset);\r\n        // Initialize a default name.\r\n        const name = `New ${type.capitalize()}`;\r\n        // Prepare the item object.\r\n        const itemData = {\r\n            name: name,\r\n            type: type,\r\n            data: data\r\n        };\r\n        itemData.data = { rank: 1 };\r\n        // Remove the type from the dataset since it's in the itemData.type prop.\r\n        delete itemData.data[\"type\"];\r\n        // Finally, create the item!\r\n        //console.log(itemData);\r\n        return await Item.create(itemData, { parent: this.actor }).then(\r\n            (item) => {\r\n                item.sheet.render(true);\r\n            }\r\n        );\r\n    }\r\n\r\n    render(force = false, options = {}) {\r\n        // Grab the sheetdata for both updates and new apps.\r\n        let sheetData = this.getData();\r\n        // Exit if Vue has already rendered.\r\n        if (this.app !== null) {\r\n            let states = Application.RENDER_STATES;\r\n            if (\r\n                this._state == states.RENDERING ||\r\n                this._state == states.RENDERED\r\n            ) {\r\n                // Update the Datastore.\r\n                this.dataStore?.set(sheetData);\r\n                return;\r\n            }\r\n        }\r\n        // Run the normal Foundry render once.\r\n        this._render(force, options)\r\n            .catch((err) => {\r\n                err.message = `An error occurred while rendering ${this.constructor.name} ${this.appId}: ${err.message}`;\r\n                console.error(err);\r\n                this._state = Application.RENDER_STATES.ERROR;\r\n            })\r\n            // Run Svelte's render, assign it to our prop for tracking.\r\n            .then((rendered) => {\r\n                // Prepare the actor data.\r\n                this.dataStore = writable(sheetData);\r\n                //console.log(sheetData);\r\n                this.app = new MouseGuardActorSheetBase({\r\n                    target: this.element.find(\"form\").get(0),\r\n                    props: {\r\n                        dataStore: this.dataStore\r\n                        //name: 'world',\r\n                    }\r\n                });\r\n            });\r\n        // Update editable permission\r\n        options.editable = options.editable ?? this.object.isOwner;\r\n\r\n        // Register the active Application with the referenced Documents\r\n        this.object.apps[this.appId] = this;\r\n        // Return per the overridden method.\r\n        return this;\r\n    }\r\n\r\n    close(options = {}) {\r\n        if (this.app != null) {\r\n            this.app.$destroy();\r\n            this.app = null;\r\n            this.dataStore = null;\r\n        }\r\n        return super.close(options);\r\n    }\r\n}\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n\r\n    import MouseGuardActorSheetPortrait from \"./MouseGuardActorSheetMousePortrait.svelte\";\r\n    import MouseGuardActorSheetMouseName from \"./MouseGuardActorSheetMouseName.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { actor, sheet } = $sheetData;\r\n    let data;\r\n    $: data = $sheetData.data;\r\n    console.log(data);\r\n\r\n    /**\r\n     * Opens a File Picker and updates the actor accordingly.\r\n     */\r\n    const filePicker = (event) => {\r\n        const attr = event.currentTarget.dataset.edit;\r\n        const current = getProperty(data, attr);\r\n        const fp = new FilePicker({\r\n            type: \"image\",\r\n            current: current,\r\n            callback: (path) => {\r\n                actor.update({ [attr]: path });\r\n            },\r\n            top: sheet.position.top + 40,\r\n            left: sheet.position.left + 10\r\n        });\r\n        return fp.browse();\r\n    };\r\n</script>\r\n\r\n<actorhead>\r\n    <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n            <MouseGuardActorSheetMouseName />\r\n        </div>\r\n        <MouseGuardActorSheetPortrait />\r\n    </div>\r\n</actorhead>\r\n\r\n<style>\r\n    .flex-container {\r\n        display: flex;\r\n    }\r\n\r\n    .flex-item {\r\n        flex-grow: 1;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { getContext } from \"svelte\";\r\n    import { updateRating, setMouseDice } from \"./MouseGuardCommon.svelte\";\r\n\r\n    //getContext(\"sheetStore\", dataStore);\r\n    let sheetData = getContext(\"sheetStore\");\r\n    let { sheet } = $sheetData;\r\n    let data;\r\n    let abilities;\r\n    $: data = $sheetData.data;\r\n    $: abilities = $sheetData.data.system.itemTypes.ability;\r\n    $: skills = $sheetData.data.system.itemTypes.skill;\r\n    $: wises = $sheetData.data.system.itemTypes.wise;\r\n    $: traits = $sheetData.data.system.itemTypes.trait;\r\n</script>\r\n\r\n<div class=\"box\">\r\n    <largecard>\r\n        <h1>{game.i18n.localize(\"MOUSEGUARD.Abilities\")}</h1>\r\n        <div class=\"flex-container\">\r\n            {#each abilities as ability}\r\n                <ability>\r\n                    <div name={ability.id}>\r\n                        <label\r\n                            on:click={(e) =>\r\n                                setMouseDice(sheet, ability.system.rating)}\r\n                            class=\"header\"\r\n                            ><a>{game.i18n.localize(ability.name)}</a>:\r\n                        </label>\r\n                        <input\r\n                            name={ability.id}\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            value={ability.system.rating}\r\n                            on:change={(e) =>\r\n                                updateRating(\r\n                                    sheet,\r\n                                    e.target.name,\r\n                                    \"rating\",\r\n                                    parseInt(e.target.value)\r\n                                )}\r\n                        />\r\n                    </div>\r\n                </ability>\r\n            {/each}\r\n        </div>\r\n    </largecard>\r\n</div>\r\n\r\n{#if Object(skills).length > 0}\r\n    <div class=\"box\">\r\n        <largecard>\r\n            <h1>{game.i18n.localize(\"MOUSEGUARD.Skills\")}</h1>\r\n            {#each skills as skill}\r\n                <skill>\r\n                    <div name={skill.id}>\r\n                        <label\r\n                            on:click={(e) =>\r\n                                setMouseDice(\r\n                                    sheet,\r\n                                    skill.system.rank,\r\n                                    game.i18n.localize(skill.name)\r\n                                )}\r\n                            class=\"header\"\r\n                            ><a>{game.i18n.localize(skill.name)}</a>:\r\n                        </label>\r\n                        <input\r\n                            name={skill.id}\r\n                            type=\"number\"\r\n                            value={skill.system.rank}\r\n                            on:change={(e) =>\r\n                                updateRating(\r\n                                    sheet,\r\n                                    e.target.name,\r\n                                    \"rank\",\r\n                                    parseInt(e.target.value)\r\n                                )}\r\n                        />\r\n                    </div>\r\n                    <div class=\"item-controls\">\r\n                        <a\r\n                            on:click={sheet?._onItemDelete(skill._id)}\r\n                            class=\"item-control item-delete\"\r\n                            title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                        >\r\n                    </div>\r\n                </skill>\r\n            {/each}\r\n        </largecard>\r\n    </div>\r\n{/if}\r\n\r\n{#if Object(traits).length > 0}\r\n    <div class=\"box\">\r\n        <largecard>\r\n            <h1>{game.i18n.localize(\"MOUSEGUARD.Traits\")}</h1>\r\n            {#each traits as trait}\r\n                <trait>\r\n                    <div name={trait.id}>\r\n                        <label\r\n                            on:click={(e) =>\r\n                                setMouseDice(\r\n                                    sheet,\r\n                                    trait.system.level,\r\n                                    game.i18n.localize(trait.name)\r\n                                )}\r\n                            class=\"header\"\r\n                            ><a>{game.i18n.localize(trait.name)}</a>:\r\n                        </label>\r\n                        <input\r\n                            name={trait.id}\r\n                            type=\"number\"\r\n                            value={trait.system.level}\r\n                            on:change={(e) =>\r\n                                updateRating(\r\n                                    sheet,\r\n                                    e.target.name,\r\n                                    \"level\",\r\n                                    parseInt(e.target.value)\r\n                                )}\r\n                        />\r\n                    </div>\r\n                    <div class=\"item-controls\">\r\n                        <a\r\n                            on:click={sheet?._onItemDelete(trait._id)}\r\n                            class=\"item-control item-delete\"\r\n                            title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                        >\r\n                    </div>\r\n                </trait>\r\n            {/each}\r\n        </largecard>\r\n    </div>\r\n{/if}\r\n\r\n{#if Object(wises).length > 0}\r\n    <h1>{game.i18n.localize(\"MOUSEGUARD.Wises\")}</h1>\r\n    {#each wises as wise}\r\n        <wise>\r\n            <div name={wise.id}>\r\n                <label\r\n                    on:click={(e) =>\r\n                        setMouseDice(\r\n                            sheet,\r\n                            wise.system.rank,\r\n                            game.i18n.localize(wise.name)\r\n                        )}\r\n                    class=\"header\"\r\n                    ><a>{game.i18n.localize(wise.name)}</a>:\r\n                </label>\r\n                <input\r\n                    name={wise.id}\r\n                    type=\"number\"\r\n                    value={wise.system.rank}\r\n                    on:change={(e) =>\r\n                        updateRating(\r\n                            sheet,\r\n                            e.target.name,\r\n                            \"rank\",\r\n                            parseInt(e.target.value)\r\n                        )}\r\n                />\r\n            </div>\r\n            <div class=\"item-controls\">\r\n                <a\r\n                    on:click={sheet?._onItemDelete(wise._id)}\r\n                    class=\"item-control item-delete\"\r\n                    title=\"Delete Item\"><i class=\"fas fa-trash\" /></a\r\n                >\r\n            </div>\r\n        </wise>\r\n    {/each}\r\n{/if}\r\n\r\n<style>\r\n    .box {\r\n        border-radius: 0 0 0.5rem 0.5rem;\r\n        border-top: 0;\r\n        clear: both;\r\n        height: 100%;\r\n        display: flex;\r\n    }\r\n\r\n    largecard {\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        width: 100%;\r\n        font-family: \"Khula\", sans-serif;\r\n        flex-wrap: wrap;\r\n        display: block;\r\n    }\r\n\r\n    ability {\r\n        display: inline-block;\r\n        align-self: flex-end;\r\n        width: 20%;\r\n        padding-left: 20px;\r\n    }\r\n\r\n    skill {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    wise {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    trait {\r\n        display: flex;\r\n        padding-left: 20px;\r\n        float: left;\r\n        height: 80px;\r\n    }\r\n\r\n    input {\r\n        border: none;\r\n        width: 40px;\r\n        float: left;\r\n        text-align: center;\r\n        background-color: white;\r\n        margin-right: 5px;\r\n        margin-top: 2px;\r\n        height: 35px;\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n    }\r\n\r\n    h1 {\r\n        font-family: \"Germania One\", cursive;\r\n        padding-left: 30px;\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        margin-top: 3px;\r\n        width: 100%;\r\n        display: block;\r\n        cursor: pointer;\r\n    }\r\n\r\n    label:hover {\r\n    }\r\n\r\n    .header {\r\n        font-family: \"Germania One\", cursive;\r\n        font-size: large;\r\n        width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    .flex-container {\r\n        display: flex;\r\n    }\r\n</style>\r\n", "<script>\r\n    import { setContext } from \"svelte\";\r\n\r\n    // Component imports\r\n    //TODO: IMPORTS\r\n\r\n    import MouseGuardActorSheetHeader from \"./MouseGuardActorSheetHeader.svelte\";\r\n    import MouseGuardNpcActorSheetBody from \"./MouseGuardNPCActorSheetBody.svelte\";\r\n    import MouseGuardActorSheetMouseDispo from \"./MouseGuardActorSheetMouseDispo.svelte\";\r\n\r\n    //Exports\r\n    export let dataStore;\r\n    setContext(\"sheetStore\", dataStore);\r\n    //let sheetData = getContext(\"sheetStore\");\r\n</script>\r\n\r\n<div class=\"box\"><MouseGuardActorSheetHeader /></div>\r\n\r\n<div class=\"box\">\r\n    <MouseGuardNpcActorSheetBody />\r\n</div>\r\n<div class=\"box\">\r\n    <MouseGuardActorSheetMouseDispo />\r\n</div>\r\n\r\n<style>\r\n    .box {\r\n        border-radius: 0 0 0.5rem 0.5rem;\r\n        border-top: 0;\r\n    }\r\n\r\n    content {\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    @import url(\"https://fonts.googleapis.com/css2?family=Germania+One&family=Khula&display=swap\");\r\n</style>\r\n", "import MouseGuardNPCActorSheetBase from \"./svelte/MouseGuardNPCActorSheetBase.svelte\"; // import Svelte App\nimport { writable } from \"svelte/store\";\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n * @extends {ActorSheet}\n */\nexport class MouseGuardNPCActorSheet extends ActorSheet {\n    app = null;\n    dataStore = null;\n\n    /** @inheritdoc */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: [\"mouseguard\", \"sheet\", \"actor\"],\n            template: \"systems/mouseguard/templates/actor-sheetv2.html\",\n            width: 550,\n            height: 600,\n            tabs: []\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /** @inheritdoc */\n    getData() {\n        const context = super.getData();\n        context.systemData = context.system;\n        context.sheet = this;\n\n        return context;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @inheritdoc */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        // Everything below here is only needed if the sheet is editable\n        if (!this.isEditable) return;\n\n        // Item Controls\n        html.find(\".item-control\").click(this._onItemControl.bind(this));\n        html.find(\".items .rollable\").on(\"click\", this._onItemRoll.bind(this));\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Handle click events for Item control buttons within the Actor Sheet\n     * @param event\n     * @private\n     */\n    _onItemControl(event) {\n        event.preventDefault();\n\n        // Obtain event data\n        const button = event.currentTarget;\n        const li = button.closest(\".item\");\n        const item = this.actor.items.get(li?.dataset.itemId);\n\n        // Handle different actions\n        switch (button.dataset.action) {\n            case \"create\":\n                const cls = getDocumentClass(\"Item\");\n                return cls.create(\n                    {\n                        name: game.i18n.localize(\"MOUSEGUARD.ItemNew\"),\n                        type: \"item\"\n                    },\n                    { parent: this.actor }\n                );\n            case \"edit\":\n                return item.sheet.render(true);\n            case \"delete\":\n                return item.delete();\n        }\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Listen for roll buttons on items.\n     * @param {MouseEvent} event    The originating left click event\n     */\n    _onItemRoll(event) {\n        let button = $(event.currentTarget);\n        const li = button.parents(\".item\");\n        const item = this.actor.items.get(li.data(\"itemId\"));\n        let r = new Roll(button.data(\"roll\"), this.actor.getRollData());\n        return r.toMessage({\n            user: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n            flavor: `<h2>${item.name}</h2><h3>${button.text()}</h3>`\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /** @inheritdoc */\n    _getSubmitData(updateData) {\n        let formData = super._getSubmitData(updateData);\n        return formData;\n    }\n\n    _setMouseDice(count) {\n        game.mouseguard.RollCount = count;\n        game.mouseguard.updateDisplay(count);\n    }\n\n    async _updateActorAbility(id, type, value) {\n        await this.actor.updateEmbeddedDocuments(\"Item\", [\n            { _id: id, data: { [type]: value } }\n        ]);\n    }\n\n    async _updateEmbededItem(id, _data) {\n        await this.actor.updateEmbeddedDocuments(\"Item\", [\n            { _id: id, data: _data }\n        ]);\n        //console.log(this.actor)\n    }\n\n    async _onItemDelete(itemId) {\n        const item = this.actor.items.get(itemId);\n        item.delete();\n        this.render();\n    }\n\n    async _onItemCreate(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        // Get the type of item to create.\n        const type = header.dataset.type;\n        // Grab any data associated with this control.\n        const data = duplicate(header.dataset);\n        // Initialize a default name.\n        const name = `New ${type.capitalize()}`;\n        // Prepare the item object.\n        const itemData = {\n            name: name,\n            type: type,\n            data: data\n        };\n        itemData.data = { rank: 1 };\n        // Remove the type from the dataset since it's in the itemData.type prop.\n        delete itemData.data[\"type\"];\n        // Finally, create the item!\n        //console.log(itemData);\n        return await Item.create(itemData, { parent: this.actor }).then(\n            (item) => {\n                item.sheet.render(true);\n            }\n        );\n    }\n\n    render(force = false, options = {}) {\n        // Grab the sheetdata for both updates and new apps.\n        let sheetData = this.getData();\n        //console.log(sheetData)\n        // Exit if Vue has already rendered.\n        if (this.app !== null) {\n            let states = Application.RENDER_STATES;\n            if (\n                this._state == states.RENDERING ||\n                this._state == states.RENDERED\n            ) {\n                // Update the Datastore.\n                this.dataStore?.set(sheetData);\n                return;\n            }\n        }\n        // Run the normal Foundry render once.\n        this._render(force, options)\n            .catch((err) => {\n                err.message = `An error occurred while rendering ${this.constructor.name} ${this.appId}: ${err.message}`;\n                console.error(err);\n                this._state = Application.RENDER_STATES.ERROR;\n            })\n            // Run Svelte's render, assign it to our prop for tracking.\n            .then((rendered) => {\n                // Prepare the actor data.\n                this.dataStore = writable(sheetData);\n                //console.log(sheetData);\n                this.app = new MouseGuardNPCActorSheetBase({\n                    target: this.element.find(\"form\").get(0),\n                    props: {\n                        dataStore: this.dataStore\n                        //name: 'world',\n                    }\n                });\n            });\n        // Update editable permission\n        options.editable = options.editable ?? this.object.isOwner;\n\n        // Register the active Application with the referenced Documents\n        this.object.apps[this.appId] = this;\n        // Return per the overridden method.\n        return this;\n    }\n\n    close(options = {}) {\n        if (this.app != null) {\n            this.app.$destroy();\n            this.app = null;\n            this.dataStore = null;\n        }\n        return super.close(options);\n    }\n}\n", "/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nexport const preloadHandlebarsTemplates = async function () {\r\n    // Define template paths to load\r\n    const templatePaths = [\r\n        // Attribute list partial.\r\n        \"systems/mouseguard/templates/parts/sheet-attributes.html\",\r\n        \"systems/mouseguard/templates/parts/sheet-groups.html\",\r\n        \"systems/mouseguard/templates/sidebar/combatant.html\"\r\n    ];\r\n\r\n    // Load the template parts\r\n    return loadTemplates(templatePaths);\r\n};\r\n", "/**\n * Create a Macro from an attribute drop.\n * Get an existing mouseguard macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nexport async function createMouseGuardMacro(data, slot) {\n  const command = `const roll = new Roll(\"${data.roll}\", actor ? actor.getRollData() : {});\n  roll.toMessage({speaker, flavor: \"${data.label}\"});`;\n  let macro = game.macros.entities.find(m => (m.name === item.label) && (m.command === command));\n  if (!macro) {\n    macro = await Macro.create({\n      name: data.label,\n      type: \"script\",\n      command: command,\n      flags: { \"mouseguard.attrMacro\": true }\n    });\n  }\n  game.user.assignHotbarMacro(macro, slot);\n  return false;\n}\n", "export class MouseDie extends Die {\r\n    constructor(termData) {\r\n        termData.faces = 6;\r\n        super(termData);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static DENOMINATION = \"m\";\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    getResultLabel(result) {\r\n        return {\r\n            1: '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n            2: '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n            3: '<img src=\"systems/mouseguard/assets/dice/snake.png\" />',\r\n            4: '<img src=\"systems/mouseguard/assets/dice/sword.png\" />',\r\n            5: '<img src=\"systems/mouseguard/assets/dice/sword.png\" />',\r\n            6: '<img src=\"systems/mouseguard/assets/dice/axe.png\" />'\r\n        }[result.result];\r\n    }\r\n}\r\n\r\n/* Other Dice Faces Maybe?\r\n        \"1\": '<img src=\"systems/mouseguard/assets/dice/dicesnake.webp\" />',\r\n        \"2\": '<img src=\"systems/mouseguard/assets/dice/dicesnake.webp\" />',\r\n        \"3\": '<img src=\"systems/mouseguard/assets/dice/dicesnake.webp\" />',\r\n        \"4\": '<img src=\"systems/mouseguard/assets/dice/dicesword.webp\" />',\r\n        \"5\": '<img src=\"systems/mouseguard/assets/dice/dicesword.webp\" />',\r\n        \"6\": '<img src=\"systems/mouseguard/assets/dice/diceaxe.webp\" />'\r\n*/\r\n\r\nconst mouseChatData = async (roll, chatOptions) => {\r\n    const isPrivate = chatOptions.isPrivate;\r\n    return {\r\n        formula: isPrivate ? \"???\" : roll._formula,\r\n        flavor: isPrivate ? null : chatOptions.flavor,\r\n        user: chatOptions.user,\r\n        tooltip: isPrivate ? \"\" : await roll.getTooltip(),\r\n        result: isPrivate ? \"?\" : roll.result,\r\n        dice_count: isPrivate ? \"?\" : roll.terms[0].number,\r\n        drop: false,\r\n        claimed: roll.claimed ?? false\r\n    };\r\n};\r\n\r\nexport class MouseRoll extends Roll {\r\n    constructor(...args) {\r\n        super(...args);\r\n    }\r\n\r\n    /**\r\n     * Render a DropRoll instance to HTML\r\n     * @param {object} [chatOptions]      An object configuring the behavior of the resulting chat message.\r\n     * @return {Promise<string>}          The rendered HTML template as a string\r\n     */\r\n    async render(chatOptions = {}) {\r\n        chatOptions = foundry.utils.mergeObject(\r\n            {\r\n                user: game.user.id,\r\n                flavor: null,\r\n                template: this.constructor.CHAT_TEMPLATE,\r\n                blind: false\r\n            },\r\n            chatOptions\r\n        );\r\n\r\n        // Execute the roll, if needed\r\n        if (!this._evaluated) this.evaluate();\r\n\r\n        // Define chat data\r\n        let chatData = await mouseChatData(this, chatOptions);\r\n\r\n        // Render the roll display template\r\n        return renderTemplate(chatOptions.template, chatData);\r\n    }\r\n\r\n    static CHAT_TEMPLATE = \"systems/mouseguard/templates/dice/roll.html\";\r\n}\r\n", "/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {FormApplication}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nexport default class ConflictTracker extends FormApplication {\r\n    constructor(object = {}, options = {}) {\r\n        super(object, options);\r\n\r\n        this.isRunningQueue = false;\r\n        if (options?.menu) {\r\n            this.menu = options.menu;\r\n        }\r\n    }\r\n\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: \"conflict-tracker\",\r\n            classes: [\"mouseguard\"],\r\n            title: \"Conflict Tracker\",\r\n            template: \"systems/mouseguard/templates/conflict-tracker.html\"\r\n        });\r\n    }\r\n\r\n    /** @override */\r\n    getData() {\r\n        // Get current value\r\n        const context = super.getData();\r\n        context.isGM = game.user.isGM;\r\n\r\n        const x = $(window).width();\r\n        //const y = $(window).height();\r\n\r\n        //this.position.left = x - 505;\r\n        //this.position.top = y - 75;\r\n        this.position.left = x / 2 - 505 / 2;\r\n        this.position.top = 10;\r\n        this.position.width = 150;\r\n        this.position.height = 105;\r\n\r\n        // filter menu based on role.\r\n\r\n        //const menu = this.menu.filter((m) => game.user.hasRole(m.minimumRole) || !m.minimumRole);\r\n\r\n        // Return data\r\n        return context;\r\n    }\r\n\r\n    /** @override */\r\n    async close(options = {}) {}\r\n\r\n    /** @override */\r\n    activateListeners(html) {}\r\n}\r\n", "/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {Combatant}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nexport default class MouseCombatant extends Combatant {\r\n    constructor(...args) {\r\n        super(...args);\r\n        //this.ConflictCaptain = false;\r\n    }\r\n\r\n    prepareDerivedData() {\r\n        super.prepareDerivedData();\r\n    }\r\n\r\n    getData() {\r\n        // Get current value\r\n        const context = super.getData();\r\n        //context.data.ConflictCaptain = this.ConflictCaptain;\r\n        return context;\r\n    }\r\n\r\n    get ConflictCaptain() {\r\n        return this.getFlag(\"mouseguard\", \"ConflictCaptain\");\r\n    }\r\n\r\n    get team() {\r\n        return this.getFlag(\"mouseguard\", \"Team\");\r\n    }\r\n\r\n    async setConflictCaptain(value) {\r\n        return this.setFlag(\"mouseguard\", \"ConflictCaptain\", value);\r\n    }\r\n\r\n    async SetMove(move) {\r\n        this.setFlag(\"mouseguard\", \"Moves\", move);\r\n    }\r\n\r\n    async setTeam(value) {\r\n        return this.setFlag(\"mouseguard\", \"Team\", value);\r\n    }\r\n\r\n    async _preCreate(data, options, user) {\r\n        await super._preCreate(data, options, user);\r\n        //console.log(data);\r\n        let init = 0;\r\n        let actor = game.actors.get(data.actorId);\r\n        if (actor.type == \"character\") init = 1;\r\n        this.updateSource({\r\n            initiative: init,\r\n            flags: {\r\n                mouseguard: {\r\n                    ConflictCaptain: false,\r\n                    Moves: [],\r\n                    Team: 0\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async doMove(id) {\r\n        let Moves = this.getFlag(\"mouseguard\", \"Moves\");\r\n        //Get the Move being used.\r\n        let theMove = Moves.filter((item) => item.id == id);\r\n\r\n        //Send it to chat\r\n        let template = \"systems/mouseguard/templates/chat/combat-action.hbs\";\r\n        let data = { actor: [this.actor][0], move: theMove[0].move };\r\n\r\n        var content = await renderTemplate(template, data);\r\n\r\n        let chatData = {\r\n            user: game.user._id,\r\n            speaker: ChatMessage.getSpeaker({ actor: data.actor })\r\n        };\r\n        chatData.content = content;\r\n        ChatMessage.create(chatData);\r\n\r\n        //Remove move from array and save other moves\r\n        let otherMoves = Moves.filter((item) => item.id !== id);\r\n        this.SetMove(otherMoves);\r\n    }\r\n}\r\n", "export default class MouseSocket {\r\n    static async askGoal(data) {\r\n        data.this = this;\r\n        let dlg = await renderTemplate(\r\n            \"systems/mouseguard/templates/parts/conflict-manager.hbs\",\r\n            data\r\n        );\r\n        new Dialog({\r\n            title: `Conflict Manager`,\r\n            content: dlg,\r\n            buttons: {\r\n                ok: {\r\n                    label: \"Apply\",\r\n                    callback: async (html) => {\r\n                        //Do the thing\r\n                        data.this.goalManager(html, data);\r\n                    }\r\n                },\r\n                cancel: {\r\n                    label: \"Cancel\"\r\n                }\r\n            }\r\n        }).render(true);\r\n    }\r\n\r\n    static async goalManager(html, data) {\r\n        let conflictGoal = html.find(\"#conflict_goal\")[0].value;\r\n\r\n        await game.socket.emit(\"system.mouseguard\", {\r\n            action: \"setGoal\",\r\n            combat: data.combat._id,\r\n            goal: conflictGoal\r\n        });\r\n    }\r\n\r\n    static async setGoal(data) {\r\n        if (game.user.isGM) {\r\n            let combat = await game.combats.get(data.combat);\r\n            combat.setGoal(data.goal);\r\n            combat.setFlag(\"mouseguard\", \"goal\", data.goal);\r\n        }\r\n    }\r\n\r\n    static async askMoves(data) {\r\n        //ui.combat.renderPopout(true);\r\n        let dlg = await renderTemplate(\r\n            \"systems/mouseguard/templates/parts/conflict-move-manager.hbs\",\r\n            data\r\n        );\r\n\r\n        new Dialog({\r\n            title: `Conflict Manager`,\r\n            content: dlg,\r\n            buttons: {\r\n                ok: {\r\n                    label: game.i18n.localize(\"MOUSEGUARD.Send\"),\r\n                    callback: async (html) => {\r\n                        //TODO: Loop this?\r\n                        let error = false;\r\n                        let Move1Actor = html.find(\"#move0-actor\")[0].value;\r\n                        let Move1Move = html.find(\".move0:checked\").val(); //$('input[name=\"name_of_your_radiobutton\"]:checked').val();\r\n                        let Move2Actor = html.find(\"#move1-actor\")[0].value;\r\n                        let Move2Move = html.find(\".move1:checked\").val(); //$('input[name=\"name_of_your_radiobutton\"]:checked').val();\r\n                        let Move3Actor = html.find(\"#move2-actor\")[0].value;\r\n                        let Move3Move = html.find(\".move2:checked\").val(); //$('input[name=\"name_of_your_radiobutton\"]:checked').val();\r\n                        let CombatantData = {\r\n                            [Move1Actor]: [],\r\n                            [Move2Actor]: [],\r\n                            [Move3Actor]: []\r\n                        };\r\n                        if (!!Move1Move == false) error = true;\r\n                        if (!!Move2Move == false) error = true;\r\n                        if (!!Move3Move == false) error = true;\r\n\r\n                        if (error) {\r\n                            ui.notifications.error(\r\n                                \"An error occured while setting your moves. Please select new moves.\"\r\n                            );\r\n                            this.askMoves(data);\r\n                            return;\r\n                        }\r\n\r\n                        CombatantData[Move1Actor].push({\r\n                            id: randomID(),\r\n                            move: Move1Move,\r\n                            combatant: Move1Actor\r\n                        });\r\n                        CombatantData[Move2Actor].push({\r\n                            id: randomID(),\r\n                            move: Move2Move,\r\n                            combatant: Move2Actor\r\n                        });\r\n                        CombatantData[Move3Actor].push({\r\n                            id: randomID(),\r\n                            move: Move3Move,\r\n                            combatant: Move3Actor\r\n                        });\r\n                        let moveData = {\r\n                            action: \"setMoves\",\r\n                            combat: data.combat,\r\n                            data: CombatantData\r\n                        };\r\n\r\n                        if (data.npc == true) {\r\n                            moveData.combat = data.combat;\r\n                            this.setMoves(moveData);\r\n                        } else {\r\n                            await game.socket.emit(\r\n                                \"system.mouseguard\",\r\n                                moveData\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n                cancel: {\r\n                    label: \"Cancel\"\r\n                }\r\n            }\r\n        }).render(true);\r\n    }\r\n\r\n    static async moveManger(html, data) {}\r\n\r\n    static async setMoves(data) {\r\n        if (game.user.isGM) {\r\n            let combat = await game.combats.get(data.combat._id);\r\n            let x = Object.keys(data.data).length;\r\n\r\n            for (const key of Object.keys(data.data)) {\r\n                let combatant = await combat.combatants.get(key);\r\n                await combatant.setFlag(\"mouseguard\", \"Moves\", data.data[key]);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {Combat}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\nimport MouseSocket from \"./socket\";\r\n\r\nexport default class MouseCombat extends Combat {\r\n    constructor(object = {}, options = {}) {\r\n        super(object, options);\r\n    }\r\n\r\n    /** @override */\r\n    getData() {\r\n        const context = super.getData();\r\n        return context;\r\n    }\r\n\r\n    get getGoal1() {\r\n        return this.getFlag(\"mouseguard\", \"goal1\");\r\n    }\r\n\r\n    get getGoal2() {\r\n        return this.getFlag(\"mouseguard\", \"goal2\");\r\n    }\r\n\r\n    get getConflictCaptain() {\r\n        return this.getFlag(\"mouseguard\", \"ConflictCaptain\");\r\n    }\r\n\r\n    get getConflictCaptainTeam2() {\r\n        return this.getFlag(\"mouseguard\", \"ConflictCaptain2\");\r\n    }\r\n\r\n    async setConflictCaptain(value) {\r\n        return this.setFlag(\"mouseguard\", \"ConflictCaptain\", value);\r\n    }\r\n\r\n    async setConflictCaptainTeam2(value) {\r\n        return this.setFlag(\"mouseguard\", \"ConflictCaptain2\", value);\r\n    }\r\n\r\n    async _preCreate(data, options, user) {\r\n        await super._preCreate(data, options, user);\r\n        this.updateSource({\r\n            flags: {\r\n                mouseguard: {\r\n                    ConflictCaptain: null,\r\n                    ConflictCaptain2: null,\r\n                    goal1: null,\r\n                    goal2: null\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static _canUpdate(user, doc, data) {\r\n        if (user.isGM) return true; // GM users can do anything\r\n        const updateKeys = new Set(Object.keys(data));\r\n        const allowedKeys = new Set([\"_id\", \"initiative\", \"flags\"]);\r\n        return updateKeys.isSubset(allowedKeys); // Players may only update initiative scores and flags\r\n    }\r\n\r\n    async startCombat() {\r\n        let goal = this.flags.mouseguard.goal;\r\n        let CC = this.flags.mouseguard.ConflictCaptain;\r\n\r\n        if (!CC) {\r\n            ui.notifications.error(game.i18n.localize(\"COMBAT.NeedCC\"));\r\n            return false;\r\n        }\r\n        if (goal == null) {\r\n            ui.notifications.error(game.i18n.localize(\"COMBAT.NeedGoal\"));\r\n            this.askGoal();\r\n            return false;\r\n        }\r\n\r\n        if (!!goal != false && CC) {\r\n            this.askMove();\r\n            //ui.combat.renderPopout(true)\r\n            return this.update({ round: 1, turn: 0 });\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCCPlayerByID(conflictCaptainID) {\r\n        let combatant = this.combatants.get(conflictCaptainID);\r\n        let actor = game.actors.get(combatant.actorId);\r\n\r\n        return (\r\n            game.users.filter(\r\n                (u) => !u.isGM && actor.testUserPermission(u, \"OWNER\")\r\n            )?.[0] ?? game.users.activeGM\r\n        );\r\n    }\r\n\r\n    async askGoal() {\r\n        let CC = this.flags.mouseguard.ConflictCaptain;\r\n\r\n        if (!CC) {\r\n            ui.notifications.error(\"A Conflict Captain Must be set\");\r\n            return false;\r\n        }\r\n\r\n        let player = this.getCCPlayer();\r\n        await game.socket.emit(\r\n            \"system.mouseguard\",\r\n            { action: \"askGoal\", combat: this },\r\n            { recipients: [player._id] }\r\n        );\r\n    }\r\n\r\n    async setGoal(goal) {\r\n        this.setFlag(\"mouseguard\", \"goal1\", goal).then((content) => {\r\n            this.startCombat();\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    // Create a list of combatants for each team then send the conflict captains the modal for moves\r\n    // Filter by combatant.team\r\n    // Need to refactor to include Captains for both teams\r\n    async askMove() {\r\n        let CC = this.flags.mouseguard.ConflictCaptain;\r\n        let CC2 = this.flags.mouseguard.ConflictCaptain2;\r\n        console.log(CC2);\r\n\r\n        if (!CC) {\r\n            ui.notifications.error(game.i18n.localize(\"COMBAT.NeedCC\"));\r\n            return false;\r\n        }\r\n\r\n        let data = { combat: this };\r\n        let team1 = [];\r\n        let team2 = [];\r\n\r\n        //Team 1\r\n        let combatants = this.combatants.filter((comb) => comb.team == \"1\");\r\n        Object.keys(combatants).forEach((key) => {\r\n            team1.push({\r\n                combatant: combatants[key].id,\r\n                name: combatants[key].token.name\r\n            });\r\n        });\r\n\r\n        data.actors = team1;\r\n        data.action = \"askMoves\";\r\n\r\n        let player = this.getCCPlayerByID(this.getConflictCaptain);\r\n\r\n        await game.socket.emit(\"system.mouseguard\", data, {\r\n            recipients: [player._id]\r\n        });\r\n\r\n        let player2 = this.getCCPlayerByID(this.getConflictCaptainTeam2);\r\n        if (player2 == \"undefined\") {\r\n            data.npc = true;\r\n        }\r\n        //Team 2\r\n        let team2combatants = this.combatants.filter(\r\n            (comb) => comb.team == \"2\"\r\n        );\r\n\r\n        Object.keys(team2combatants).forEach((key) => {\r\n            team2.push({\r\n                combatant: team2combatants[key].id,\r\n                name: team2combatants[key].token.name\r\n            });\r\n        });\r\n\r\n        data.actors = team2;\r\n        //data.npc = true;\r\n        await game.socket.emit(\"system.mouseguard\", data, {\r\n            recipients: [player2._id]\r\n        });\r\n\r\n        //await MouseSocket.askMoves(data);\r\n    }\r\n\r\n    async askNPCMove(data) {\r\n        //console.log(data);\r\n        MouseSocket.askMoves(data);\r\n    }\r\n\r\n    async nextRound() {\r\n        this.askMove();\r\n        super.nextRound();\r\n    }\r\n}\r\n", "/**\r\n * A specialized form used to pop out the editor.\r\n * @extends {CombatTracker}\r\n *\r\n * OPTIONS:\r\n *\r\n *\r\n */\r\n\r\n//import { compute_rest_props } from \"svelte/internal\";\r\n\r\nexport default class MouseCombatTracker extends CombatTracker {\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            id: \"combat\",\r\n            template:\r\n                \"systems/mouseguard/templates/sidebar/combat-tracker.html\",\r\n            title: \"COMBAT.SidebarTitle\",\r\n            scrollY: [\".directory-list\"],\r\n            dragDrop: [\r\n                {\r\n                    dragSelector: \"li.combatant.actor.directory-item.flexrow\",\r\n                    dropSelector: \"li[data-team]\"\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    _canDragStart(ev) {\r\n        //console.log(ev);\r\n        if (game.user.isGM) return true;\r\n        return false;\r\n    }\r\n\r\n    _canDragDrop(ev) {\r\n        //console.log(ev);\r\n        if (game.user.isGM) return true;\r\n        return false;\r\n    }\r\n\r\n    _onDragDrop(ev) {\r\n        super._onDrop(ev);\r\n        // console.log(ev);\r\n    }\r\n\r\n    async _onDrop(ev) {\r\n        super._onDrop(ev);\r\n        if (JSON.parse(ev.dataTransfer?.getData(\"text/plain\")).id == \"0\") {\r\n            return false;\r\n        }\r\n        let dropped_id = JSON.parse(ev.dataTransfer?.getData(\"text/plain\")).id;\r\n        let target = ev.target.closest(\"li\").dataset.team;\r\n        // console.log(target);\r\n        await this.viewed.combatants.get(dropped_id).setTeam(target);\r\n    }\r\n\r\n    _onDragStart(ev) {\r\n        //super._onDragStart(ev);\r\n        //console.log(ev);\r\n        let valid = this.viewed.combatants.get(ev.target.dataset.combatantId);\r\n        if (valid.flags.mouseguard.ConflictCaptain) {\r\n            ui.notifications.error(game.i18n.localize(\"COMBAT.CCERROR\"));\r\n            ev.dataTransfer.setData(\r\n                \"text/plain\",\r\n                JSON.stringify({\r\n                    id: \"0\"\r\n                })\r\n            );\r\n            return false;\r\n        } else {\r\n            ev.dataTransfer.setData(\r\n                \"text/plain\",\r\n                JSON.stringify({ id: ev.target.dataset.combatantId })\r\n            );\r\n        }\r\n        //console.log(ev);\r\n    }\r\n\r\n    _getEntryContextOptions() {\r\n        return [\r\n            {\r\n                name: \"COMBAT.ConflictCaptain\",\r\n                icon: '<i class=\"fas fa-crown\"></i>',\r\n                callback: (li) => {\r\n                    const combatant = this.viewed.combatants.get(\r\n                        li.data(\"combatant-id\")\r\n                    );\r\n\r\n                    // Each team needs a Captain\r\n                    //combatant.team\r\n                    // This entire function should be refactored to be a single statement\r\n                    let Team = \"\";\r\n                    if (combatant.team == 2) Team = \"2\";\r\n                    if (combatant.team == 0) return;\r\n                    console.log(Team);\r\n                    if (\r\n                        this.viewed.flags.mouseguard[\r\n                            \"ConflictCaptain\" + Team\r\n                        ] == combatant.id\r\n                    ) {\r\n                        //Unset if self\r\n                        this.viewed.setFlag(\r\n                            \"mouseguard\",\r\n                            \"ConflictCaptain\" + Team,\r\n                            NaN\r\n                        );\r\n                        return combatant.setFlag(\r\n                            \"mouseguard\",\r\n                            \"ConflictCaptain\",\r\n                            false\r\n                        );\r\n                    }\r\n\r\n                    if (\r\n                        !!this.viewed.flags.mouseguard[\r\n                            \"ConflictCaptain\" + Team\r\n                        ] == false\r\n                    ) {\r\n                        // New Captain Never had an old one\r\n                        if (combatant) {\r\n                            //Set Flag on New Captain\r\n                            this.viewed.setFlag(\r\n                                \"mouseguard\",\r\n                                \"ConflictCaptain\" + Team,\r\n                                li.data(\"combatant-id\")\r\n                            );\r\n                            return combatant.setFlag(\r\n                                \"mouseguard\",\r\n                                \"ConflictCaptain\",\r\n                                true\r\n                            );\r\n                        }\r\n                    } else {\r\n                        ui.notifications.error(\r\n                            game.i18n.localize(\"COMBAT.CCSet\")\r\n                        );\r\n                        return false;\r\n                    }\r\n\r\n                    //Should never get here\r\n                    console.log(this);\r\n                }\r\n            },\r\n            {\r\n                name: \"COMBAT.CombatantUpdate\",\r\n                icon: '<i class=\"fas fa-edit\"></i>',\r\n                callback: this._onConfigureCombatant.bind(this)\r\n            },\r\n            {\r\n                name: \"Console.Log\",\r\n                icon: '<i class=\"fas fa-edit\"></i>',\r\n                callback: (li) => {\r\n                    const combatant = this.viewed.combatants.get(\r\n                        li.data(\"combatant-id\")\r\n                    );\r\n                    if (combatant) console.log(combatant);\r\n                }\r\n            },\r\n            {\r\n                name: \"COMBAT.CombatantRemove\",\r\n                icon: '<i class=\"fas fa-trash\"></i>',\r\n                callback: (li) => {\r\n                    const combatant = this.viewed.combatants.get(\r\n                        li.data(\"combatant-id\")\r\n                    );\r\n                    if (combatant) return combatant.delete();\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Handle a Combatant control toggle\r\n     * @private\r\n     * @param {Event} event   The originating mousedown event\r\n     */\r\n    async _onCombatantControl(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const btn = event.currentTarget;\r\n        const li = btn.closest(\".combatant\");\r\n        const combat = this.viewed;\r\n        const c = combat.combatants.get(li.dataset.combatantId);\r\n\r\n        // Switch control action\r\n        switch (btn.dataset.control) {\r\n            case \"doMove\":\r\n                return c.doMove(btn.dataset.move);\r\n            // Toggle combatant visibility\r\n            case \"toggleHidden\":\r\n                return c.update({ hidden: !c.hidden });\r\n\r\n            // Toggle combatant defeated flag\r\n            case \"toggleDefeated\":\r\n                return this._onToggleDefeatedStatus(c);\r\n\r\n            // Roll combatant initiative\r\n            case \"rollInitiative\":\r\n                return combat.rollInitiative([c.id]);\r\n\r\n            // Actively ping the Combatant\r\n            case \"pingCombatant\":\r\n                return this._onPingCombatant(c);\r\n        }\r\n    }\r\n\r\n    async getData(options) {\r\n        let context = await super.getData(options);\r\n        if (context.combat) {\r\n            for (let [i, combatant] of context.combat.turns.entries()) {\r\n                context.turns[i].flags = combatant.flags;\r\n                context.turns[i].isFirstOwner = this.isFirstOwner(\r\n                    combatant.actor\r\n                );\r\n                context.turns[i].hasPlayerOwner = this.hasPlayerOwner(\r\n                    combatant.actor\r\n                );\r\n            }\r\n        }\r\n\r\n        //console.log(context);\r\n        return context;\r\n    }\r\n\r\n    firstOwner(doc) {\r\n        /* null docs could mean an empty lookup, null docs are not owned by anyone */\r\n        if (!doc) return false;\r\n\r\n        const gmOwners = Object.entries(doc.ownership)\r\n            .filter(\r\n                ([id, level]) =>\r\n                    game.users.get(id)?.isGM &&\r\n                    game.users.get(id)?.active &&\r\n                    level === 3\r\n            )\r\n            .map(([id, level]) => id);\r\n        const otherOwners = Object.entries(doc.ownership)\r\n            .filter(\r\n                ([id, level]) =>\r\n                    !game.users.get(id)?.isGM &&\r\n                    game.users.get(id)?.active &&\r\n                    level === 3\r\n            )\r\n            .map(([id, level]) => id);\r\n\r\n        if (otherOwners.length > 0) return game.users.get(otherOwners[0]);\r\n        else return game.users.get(gmOwners[0]);\r\n    }\r\n\r\n    isFirstOwner(doc) {\r\n        //console.log(this.firstOwner(doc).id)\r\n        return game.user.id === this.firstOwner(doc).id;\r\n    }\r\n\r\n    hasPlayerOwner(doc) {\r\n        if (!doc) return false;\r\n\r\n        const gmOwners = Object.entries(doc.ownership)\r\n            .filter(\r\n                ([id, level]) =>\r\n                    game.users.get(id)?.isGM &&\r\n                    game.users.get(id)?.active &&\r\n                    level === 3\r\n            )\r\n            .map(([id, level]) => id);\r\n        const otherOwners = Object.entries(doc.ownership)\r\n            .filter(\r\n                ([id, level]) =>\r\n                    !game.users.get(id)?.isGM &&\r\n                    game.users.get(id)?.active &&\r\n                    level === 3\r\n            )\r\n            .map(([id, level]) => id);\r\n\r\n        if (otherOwners.length > 0) return true;\r\n        else return false;\r\n    }\r\n}\r\n", "/**\r\n * A simple and flexible system for world-building using an arbitrary collection of character and item attributes\r\n * Author: Atropos\r\n */\r\n\r\n// Import Modules\r\nimport { MouseGuardActor } from \"./actor.js\";\r\nimport { MouseGuardItem } from \"./item.js\";\r\nimport { MouseGuardItemSheet } from \"./item-sheet.js\";\r\nimport { MouseGuardActorSheet } from \"./actor-sheet.js\";\r\nimport { MouseGuardNPCActorSheet } from \"./npcactor-sheet.js\";\r\nimport { preloadHandlebarsTemplates } from \"./templates.js\";\r\nimport { createMouseGuardMacro } from \"./macro.js\";\r\nimport { MouseDie, MouseRoll } from \"./mousedie.js\";\r\nimport ConflictTracker from \"./conflict-tracker.js\";\r\nimport MouseCombatant from \"./mouse-combantant.js\";\r\nimport MouseCombat from \"./mouse-combat.js\";\r\nimport MouseCombatTracker from \"./mouse-combat-tracker.js\";\r\nimport MouseSocket from \"./socket.js\";\r\n//import MouseCombatModal from \"./mouse-combat-modal.js\";\r\n\r\n/* -------------------------------------------- */\r\n/*  Foundry VTT Initialization                  */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Init hook.\r\n */\r\nHooks.once(\"init\", async function () {\r\n    console.log(`Initializing MouseGuard MouseGuard System`);\r\n\r\n    /**\r\n     * Set an initiative formula for the system. This will be updated later.\r\n     * @type {String}\r\n     */\r\n\r\n    let RollCount = 0;\r\n    let RollMessage = \"\";\r\n\r\n    game.mouseguard = {\r\n        MouseGuardActor,\r\n        createMouseGuardMacro,\r\n        RollCount,\r\n        RollMessage,\r\n        updateDisplay,\r\n        MouseDie,\r\n        MouseRoll\r\n    };\r\n\r\n    // Define custom Entity classes\r\n    CONFIG.Actor.documentClass = MouseGuardActor;\r\n    CONFIG.Item.documentClass = MouseGuardItem;\r\n    CONFIG.Dice.rolls.push(MouseRoll);\r\n\r\n    CONFIG.Combatant.documentClass = MouseCombatant;\r\n    CONFIG.Combat.documentClass = MouseCombat;\r\n    CONFIG.ui.combat = MouseCombatTracker;\r\n\r\n    CONFIG.Combat.initiative = {\r\n        formula: \"1d20\",\r\n        decimals: 2\r\n    };\r\n\r\n    // Register sheet application classes\r\n    Actors.unregisterSheet(\"core\", ActorSheet);\r\n    Actors.registerSheet(\"mouseguard\", MouseGuardNPCActorSheet, {\r\n        types: [\"mouse\", \"weasel\", \"animal\"],\r\n        makeDefault: true\r\n    });\r\n    console.log(\"Setting actor Sheet\");\r\n    Actors.registerSheet(\"mouseguard\", MouseGuardActorSheet, {\r\n        types: [\"character\"],\r\n        makeDefault: true\r\n    });\r\n    Items.unregisterSheet(\"core\", ItemSheet);\r\n    Items.registerSheet(\"mouseguard\", MouseGuardItemSheet, {\r\n        makeDefault: true\r\n    });\r\n\r\n    // Register system settings\r\n    game.settings.register(\"mouseguard\", \"macroShorthand\", {\r\n        name: \"SETTINGS.MouseGuardMacroShorthandN\",\r\n        hint: \"SETTINGS.MouseGuardMacroShorthandL\",\r\n        scope: \"world\",\r\n        type: Boolean,\r\n        default: true,\r\n        config: true\r\n    });\r\n\r\n    // Register initiative setting.\r\n    game.settings.register(\"mouseguard\", \"initFormula\", {\r\n        name: \"SETTINGS.MouseGuardInitFormulaN\",\r\n        hint: \"SETTINGS.MouseGuardInitFormulaL\",\r\n        scope: \"world\",\r\n        type: String,\r\n        default: \"1d20\",\r\n        config: true,\r\n        onChange: (formula) => _simpleUpdateInit(formula, true)\r\n    });\r\n\r\n    // Retrieve and assign the initiative formula setting.\r\n    const initFormula = game.settings.get(\"mouseguard\", \"initFormula\");\r\n    _simpleUpdateInit(initFormula);\r\n\r\n    /**\r\n     * Update the initiative formula.\r\n     * @param {string} formula - Dice formula to evaluate.\r\n     * @param {boolean} notify - Whether or not to post nofications.\r\n     */\r\n    function _simpleUpdateInit(formula, notify = false) {\r\n        const isValid = Roll.validate(formula);\r\n        if (!isValid) {\r\n            if (notify)\r\n                ui.notifications.error(\r\n                    `${game.i18n.localize(\r\n                        \"MOUSEGUARD.NotifyInitFormulaInvalid\"\r\n                    )}: ${formula}`\r\n                );\r\n            return;\r\n        }\r\n        CONFIG.Combat.initiative.formula = formula;\r\n    }\r\n\r\n    /**\r\n     * Slugify a string.\r\n     */\r\n    Handlebars.registerHelper(\"slugify\", function (value) {\r\n        return value.slugify({ strict: true });\r\n    });\r\n\r\n    // Preload template partials\r\n    await preloadHandlebarsTemplates();\r\n});\r\n\r\n/**\r\n * Macrobar hook.\r\n */\r\n//Hooks.on(\"hotbarDrop\", (bar, data, slot) => createMouseGuardMacro(data, slot));\r\n\r\nHooks.once(\"init\", async function () {\r\n    CONFIG.Dice.terms[\"m\"] = MouseDie;\r\n    CONFIG.Dice.terms[\"6\"] = MouseDie;\r\n\r\n    game.socket.on(\"system.mouseguard\", (data) => {\r\n        if (data.action === \"askGoal\") MouseSocket.askGoal(data);\r\n        if (data.action === \"setGoal\") MouseSocket.setGoal(data);\r\n        if (data.action === \"askMoves\") MouseSocket.askMoves(data);\r\n        if (data.action === \"setMoves\") MouseSocket.setMoves(data);\r\n    });\r\n\r\n    await registerTours();\r\n});\r\n\r\n//                labels: [\r\n//    \"systems/mouseguard/assets/dice/snake.png\",\r\n//    \"systems/mouseguard/assets/dice/snake.png\",\r\n//    \"systems/mouseguard/assets/dice/snake.png\",\r\n//    \"systems/mouseguard/assets/dice/sword.png\",\r\n//    \"systems/mouseguard/assets/dice/sword.png\",\r\n//    \"systems/mouseguard/assets/dice/axe.png\"\r\n//],\r\nHooks.once(\"diceSoNiceReady\", (dice3d) => {\r\n    let dicetheme = \"mouseguard\";\r\n    if (!dicetheme || dicetheme == \"mouseguard\") {\r\n        dice3d.addSystem({ id: \"mouseguard\", name: \"Mouse Guard\" }, true);\r\n\r\n        dice3d.addDicePreset(\r\n            {\r\n                type: \"dm\",\r\n                labels: [\r\n                    \"systems/mouseguard/assets/dice/snake.png\",\r\n                    \"systems/mouseguard/assets/dice/snake.png\",\r\n                    \"systems/mouseguard/assets/dice/snake.png\",\r\n                    \"systems/mouseguard/assets/dice/sword.png\",\r\n                    \"systems/mouseguard/assets/dice/sword.png\",\r\n                    \"systems/mouseguard/assets/dice/axe.png\"\r\n                ],\r\n                colorset: \"white\",\r\n                system: \"mouseguard\"\r\n            },\r\n            \"d6\"\r\n        );\r\n    }\r\n\r\n    //sw dice colors\r\n\r\n    dice3d.addColorset({\r\n        name: \"white-mg\",\r\n        description: \"Mouse Guard white\",\r\n        category: \"Colors\",\r\n        foreground: \"#000000\",\r\n        background: \"#ffffff\",\r\n        outline: \"black\",\r\n        texture: \"none\",\r\n        material: \"plastic\"\r\n    });\r\n});\r\n\r\nHooks.on(\"renderSidebarTab\", (app, html, data) => {\r\n    const template = \"./systems/mouseguard/templates/mousetray.html\";\r\n\r\n    let $chat_form = html.find(\"#chat-form\");\r\n    renderTemplate(template).then((c) => {\r\n        let $content = $(c);\r\n        $chat_form.after($content);\r\n        $content.find(\".mouse_dice_button\").on(\"click\", (event) => {\r\n            event.preventDefault();\r\n            if (event.currentTarget.classList.contains(\"add\")) {\r\n                game.mouseguard.RollCount++;\r\n            } else {\r\n                game.mouseguard.RollCount--;\r\n            }\r\n\r\n            if (game.mouseguard.RollCount < 1) game.mouseguard.RollCount = 0;\r\n\r\n            // Render Dice in Dice Pool Area\r\n            updateDisplay(game.mouseguard.RollCount);\r\n        });\r\n\r\n        $content.find(\".mouse_roll_button\").on(\"click\", (event) => {\r\n            event.preventDefault();\r\n            let $self = $(event.currentTarget);\r\n            let dataset = event.currentTarget.dataset;\r\n\r\n            if (game.mouseguard.RollCount > 0) {\r\n                let actor =\r\n                    game.user.character ?? canvas.tokens.controlled[0]?.actor;\r\n                var roll = new MouseRoll(game.mouseguard.RollCount + \"dmcs>3\");\r\n                roll.evaluate({ async: true });\r\n                roll.toMessage({\r\n                    user: game.user.id,\r\n                    flavor: game.mouseguard.RollMessage,\r\n                    speaker: ChatMessage.getSpeaker({ actor: actor })\r\n                });\r\n\r\n                game.mouseguard.RollCount = 0;\r\n                game.mouseguard.RollMessage = \"\";\r\n                updateDisplay(0);\r\n            }\r\n        });\r\n\r\n        updateDisplay(game.mouseguard.RollCount);\r\n    });\r\n});\r\n\r\nHooks.once(\"ready\", async () => {\r\n    //const cTracker = new ConflictTracker(undefined, {  });\r\n    //cTracker.render(true);\r\n    // If First time launching the system Start the roll Tour\r\n    let tourRolls = game.user.getFlag(\"mouseguard\", \"tourRolls\");\r\n    if (tourRolls == undefined) {\r\n        const tour = game.tours.get(\"mouseguard.welcome\");\r\n        tour.start();\r\n        game.user.setFlag(\"mouseguard\", \"tourRolls\", 1);\r\n    }\r\n});\r\n\r\nasync function registerTours() {\r\n    try {\r\n        game.tours.register(\r\n            \"mouseguard\",\r\n            \"welcome\",\r\n            await SidebarTour.fromJSON(\"/systems/mouseguard/tours/welcome.json\")\r\n        );\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nfunction updateDisplay(count) {\r\n    //let $mouse_rolls = html.find('.mouse-dice-roll');\r\n\r\n    let diceHTML =\r\n        '<li class=\"roll mousedie d6\"><img src=\"systems/mouseguard/assets/dice/sword.png\" height=\"24\" width=\"24\"></li>';\r\n    let theHTML = \"\";\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        theHTML += diceHTML;\r\n    }\r\n\r\n    $(\".mouse-dice-roll\").html(theHTML);\r\n\r\n    $(\".mouse_dice_button.subtract\").prop(\"disabled\", !count);\r\n    $(\".mouse_roll_button\").prop(\"disabled\", !count);\r\n    if (!count) game.mouseguard.RollMessage = \"\";\r\n}\r\n\r\nHandlebars.registerHelper(\"times\", function (n, block) {\r\n    var accum = \"\";\r\n    for (var i = 0; i < n; ++i) accum += block.fn(i);\r\n    return accum;\r\n});\r\n\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\n\r\nHandlebars.registerHelper(\"ifEquals\", function (arg1, arg2, options) {\r\n    return arg1 == arg2 ? options.fn(this) : options.inverse(this);\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
